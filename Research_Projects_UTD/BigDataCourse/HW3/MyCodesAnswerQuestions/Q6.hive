CREATE TABLE IF NOT EXISTS movies(MOVIEID INT, TITLE STRING, GENRE STRING) ROW FORMAT DELIMITED FIELDS TERMINATED BY ':';
CREATE TABLE IF NOT EXISTS ratings(USERID INT, MOVIEID INT, RATING INT, TIMESTAMP STRING) ROW FORMAT DELIMITED FIELDS TERMINATED BY ':';
show tables;
LOAD DATA INPATH '/mxh109420/Spring-2015-input/movies.dat'  INTO TABLE movies;
LOAD DATA INPATH '/mxh109420/Spring-2015-input/ratings.dat'  INTO TABLE ratings;
CREATE TABLE IF NOT EXISTS users(USERID INT, GENDER STRING, AGE INT, OCCUPATION INT,ZIPCODE INT) ROW FORMAT DELIMITED FIELDS TERMINATED BY ':';
show tables;
LOAD DATA INPATH '/mxh109420/Spring-2015-input/users.dat'  INTO TABLE users;
SELECT allCDMOV.TITLE, allCDMOV.MOVIEID, allCDMOV.AVGRT
FROM (SELECT TITLE,MOVIEID,COUNT(CDMOV.USERID) AS TOTALRT,AVG(RATING) AS AVGRT
FROM (SELECT m.TITLE,r.MOVIEID,r.USERID,r.RATING
FROM ratings r JOIN movies m ON (r.MOVIEID=m.MOVIEID) 
WHERE (m.GENRE RLIKE '.*Comedy.*') OR (m.GENRE RLIKE '.*Drama.*') ) CDMOV 
JOIN users ON (users.USERID = CDMOV.USERID)
GROUP BY MOVIEID, TITLE) allCDMOV JOIN (SELECT MOVIEID,COUNT(CDMOV.USERID) AS MLTOTALRT
FROM (SELECT m.TITLE,r.MOVIEID,r.USERID,r.RATING
FROM ratings r JOIN movies m ON (r.MOVIEID=m.MOVIEID) 
WHERE (m.GENRE RLIKE '.*Comedy.*') OR (m.GENRE RLIKE '.*Drama.*') ) CDMOV 
JOIN users ON (users.USERID = CDMOV.USERID)
WHERE users.GENDER='M'
GROUP BY MOVIEID) MLCDMOV ON (MLCDMOV.MOVIEID = allCDMOV.MOVIEID)
WHERE MLCDMOV.MLTOTALRT = allCDMOV.TOTALRT AND allCDMOV.AVGRT>=4.5 AND allCDMOV.AVGRT<=4.6;