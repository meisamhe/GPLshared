% Hessian function calculation for MPEC method
function [hessian]=MPECHessian(x) %
global P1 P2 Dur1 Dur2 availlambda gamma shares cost;
%global  uij1s1 uij2s1

[J,T]=size(shares);

 pi1      =  x(1); %share of first segment 
bpd       =  x(2); %price coefficient difference heterogeneity coeff
alphapd   =  x(3); %high price regret difference heterogeneity coeff
tth1d    =   x(4); %stock out regret difference heterogeneity coeff multiplied to consumption utility
delta   = reshape(x(5:2*J+4)',[J 2]);
%delta = [ uij1s1 uij2s1];

dd_n=reshape(delta',J*2,1);

%-----------------------------------------Run OLS---------------------------------------------
%beta=[alpha c bp];
p = 5;
X1= [cost (0.5*Dur1+gamma.*Dur2).*ones(J,1) P1  availlambda.*(P1-P2) zeros(J,1)];
X2= [gamma.*availlambda.*cost gamma.*availlambda.*Dur2.*0.5 gamma.*availlambda.*P2 zeros(J,1) gamma.*(ones(J,1)-availlambda).*(0.5*Dur1+gamma.*Dur2)];

X=[X1 X2]';
Xn=reshape(X,p,J*2);
Xn=Xn'; %stack X's
Yn=dd_n;

betas=inv(Xn'*Xn)*Xn'*Yn;
errors=Yn-Xn*betas;
vcm=(errors'*errors)*inv(Xn'*Xn)/(2*J);
se_est=sqrt(diag(vcm));

% define variables to use in likelihood
delta1 =      delta(:,1);
delta2 =      delta(:,2);


% ------------------------------------------write the compelte likelihood-------------------------------
% to avoid Jacobian that is zero, which will create Log(0)= NaN; + ones(size(esh1,1)
uij1s1 =      delta(:,1);
uij2s1 =      delta(:,2);
uij1s2 =      delta(:,1)+bpd*P1(:) + alphapd.*availlambda(:).*(P1(:)-P2(:));    
uij2s2 =      delta(:,2)+gamma(:).*(availlambda(:).*(bpd*P2(:))+ tth1d*(ones(J,1)-availlambda(:)).*(0.5*Dur1(:)+gamma(:).*Dur2(:))); 


e1=exp(-[uij1s1 uij1s2]); e2=exp([uij2s1 uij2s2]-[uij1s1 uij1s2]);
 %period 1, segment 1, segment 2
s11 = exp(-log(1+e1+e2))*[1;0];
s12 = exp(-log(1+e1+e2))*[0;1];
 % period 2, segment 1 , segment 2
s21 =exp(log(e2)-log(1+e1+e2))*[1;0];
s22 =exp(log(e2)-log(1+e1+e2))*[0;1];
% condition to make sure I am not departing from feasible region
if (sum(sum(isinf(log(1+e1+e2))))>0)
    e1=exp([uij1s1 uij1s2]-[uij2s1 uij2s2]); e2=exp(-[uij2s1 uij2s2]);
    %period 1, segment 1, segment 2
    s11 = exp(log(e1)-log(1+e1+e2))*[1;0];
    s12 =  exp(log(e1)-log(1+e1+e2))*[0;1];
    % period 2, segment 1 , segment 2
    s21 = exp(-log(1+e1+e2))*[1;0]; 
    s22 =exp(-log(1+e1+e2))*[0;1];
end;

hessian= zeros(4,4);	
	
hessian(1,1)=sum(-((-(s21.*(-((-1 + s12).*s12) + (-1 + s22).*s22).*(-1 + pi1)) - (-1 + s11).*s11.*(-((-1 + s12).*s12) + (-1 + s22).*s22).*pi1 - 	...
     (-1 + s11).*s11.*((-1 + s22).*s22.*(-1 + pi1) - (-1 + s12).*s12.*pi1) - s21.*((-1 + s22).*s22.*(-1 + pi1) - (-1 + s12).*s12.*pi1) + 	...
     s21.^2.*(-((-1 + s12).*s12.*(-1 + pi1)) + (-1 + 2.*s11).*s22.*(-1 + pi1) - s11.^2.*pi1 - (s11.^2 + (-1 + s12).*s12).*pi1 + s22.*(1 + (-1 + 2.*s11).*pi1))).^2./	...
   (-(s21.*(-1 + pi1).*((-1 + s22).*s22.*(-1 + pi1) - (-1 + s12).*s12.*pi1)) - (-1 + s11).*s11.*pi1.*((-1 + s22).*s22.*(-1 + pi1) - (-1 + s12).*s12.*pi1) + 	...
     s21.^2.*(-(pi1.*((-1 + s12).*s12.*(-1 + pi1) + s11.^2.*pi1)) + s22.*(-1 + pi1).*(1 + (-1 + 2.*s11).*pi1))).^2) + 	...
 (s21.^2.*(-2.*s11.^2 - 2.*(-1 + s12).*s12 + 2.*(-1 + 2.*s11).*s22) - 2.*(-1 + s11).*s11.*(-((-1 + s12).*s12) + (-1 + s22).*s22) - 	...
   2.*s21.*(-((-1 + s12).*s12) + (-1 + s22).*s22))./(-(s21.*(-1 + pi1).*((-1 + s22).*s22.*(-1 + pi1) - (-1 + s12).*s12.*pi1)) - 	...
   (-1 + s11).*s11.*pi1.*((-1 + s22).*s22.*(-1 + pi1) - (-1 + s12).*s12.*pi1) + 	...
   s21.^2.*(-(pi1.*((-1 + s12).*s12.*(-1 + pi1) + s11.^2.*pi1)) + s22.*(-1 + pi1).*(1 + (-1 + 2.*s11).*pi1))));	
	
hessian(2,2)=sum(-((-(pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*(-1 + s12).*(P1.*s12.*(1 - s12 - s22) + 	...
        (P1 - P2.*gamma.*availlambda).*s12.*s22)) - pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*s12.*	...
      (P1.*s12.*(1 - s12 - s22) + (P1 - P2.*gamma.*availlambda).*s12.*s22) + 	...
     (-1 + pi1).*((-1 + s11).*s11.*pi1 + s21.*(-1 + s21 + pi1 + (-1 + 2.*s11).*s21.*pi1)).*((-P1 + P2.*gamma.*availlambda).*s12.*s22 + 	...
       P2.*gamma.*availlambda.*(1 - s12 - s22).*s22) - 2.*(-1 + pi1).*(s21.*(-1 + pi1) + (-1 + s11).*s11.*pi1).*s22.*	...
      ((-P1 + P2.*gamma.*availlambda).*s12.*s22 + P2.*gamma.*availlambda.*(1 - s12 - s22).*s22)).^2./	...
   (-(s11.^2.*s21.^2.*pi1.^2) - pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*(-1 + s12).*s12 + 	...
     (-1 + pi1).*((-1 + s11).*s11.*pi1 + s21.*(-1 + s21 + pi1 + (-1 + 2.*s11).*s21.*pi1)).*s22 - (-1 + pi1).*(s21.*(-1 + pi1) + (-1 + s11).*s11.*pi1).*	...
      s22.^2).^2) + (-2.*pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*	...
    (P1.*s12.*(1 - s12 - s22) + (P1 - P2.*gamma.*availlambda).*s12.*s22).^2 - 2.*(-1 + pi1).*(s21.*(-1 + pi1) + (-1 + s11).*s11.*pi1).*	...
    ((-P1 + P2.*gamma.*availlambda).*s12.*s22 + P2.*gamma.*availlambda.*(1 - s12 - s22).*s22).^2 - 	...
   pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*(-1 + s12).*	...
    (P1.*(1 - s12 - s22).*(P1.*s12.*(1 - s12 - s22) + (P1 - P2.*gamma.*availlambda).*s12.*s22) + 	...
     (P1 - P2.*gamma.*availlambda).*s22.*(P1.*s12.*(1 - s12 - s22) + (P1 - P2.*gamma.*availlambda).*s12.*s22) + 	...
     P1.*s12.*(-(P1.*s12.*(1 - s12 - s22)) - (P1 - P2.*gamma.*availlambda).*s12.*s22 - (-P1 + P2.*gamma.*availlambda).*s12.*s22 - 	...
       P2.*gamma.*availlambda.*(1 - s12 - s22).*s22) + (P1 - P2.*gamma.*availlambda).*s12.*((-P1 + P2.*gamma.*availlambda).*s12.*s22 + 	...
       P2.*gamma.*availlambda.*(1 - s12 - s22).*s22)) - pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*s12.*	...
    (P1.*(1 - s12 - s22).*(P1.*s12.*(1 - s12 - s22) + (P1 - P2.*gamma.*availlambda).*s12.*s22) + 	...
     (P1 - P2.*gamma.*availlambda).*s22.*(P1.*s12.*(1 - s12 - s22) + (P1 - P2.*gamma.*availlambda).*s12.*s22) + 	...
     P1.*s12.*(-(P1.*s12.*(1 - s12 - s22)) - (P1 - P2.*gamma.*availlambda).*s12.*s22 - (-P1 + P2.*gamma.*availlambda).*s12.*s22 - 	...
       P2.*gamma.*availlambda.*(1 - s12 - s22).*s22) + (P1 - P2.*gamma.*availlambda).*s12.*((-P1 + P2.*gamma.*availlambda).*s12.*s22 + 	...
       P2.*gamma.*availlambda.*(1 - s12 - s22).*s22)) + (-1 + pi1).*((-1 + s11).*s11.*pi1 + s21.*(-1 + s21 + pi1 + (-1 + 2.*s11).*s21.*pi1)).*	...
    ((-P1 + P2.*gamma.*availlambda).*s22.*(P1.*s12.*(1 - s12 - s22) + (P1 - P2.*gamma.*availlambda).*s12.*s22) + 	...
     P2.*gamma.*availlambda.*s22.*(-(P1.*s12.*(1 - s12 - s22)) - (P1 - P2.*gamma.*availlambda).*s12.*s22 - 	...
       (-P1 + P2.*gamma.*availlambda).*s12.*s22 - P2.*gamma.*availlambda.*(1 - s12 - s22).*s22) + 	...
     (-P1 + P2.*gamma.*availlambda).*s12.*((-P1 + P2.*gamma.*availlambda).*s12.*s22 + P2.*gamma.*availlambda.*(1 - s12 - s22).*s22) + 	...
     P2.*gamma.*availlambda.*(1 - s12 - s22).*((-P1 + P2.*gamma.*availlambda).*s12.*s22 + P2.*gamma.*availlambda.*(1 - s12 - s22).*s22)) - 	...
   2.*(-1 + pi1).*(s21.*(-1 + pi1) + (-1 + s11).*s11.*pi1).*s22.*	...
    ((-P1 + P2.*gamma.*availlambda).*s22.*(P1.*s12.*(1 - s12 - s22) + (P1 - P2.*gamma.*availlambda).*s12.*s22) + 	...
     P2.*gamma.*availlambda.*s22.*(-(P1.*s12.*(1 - s12 - s22)) - (P1 - P2.*gamma.*availlambda).*s12.*s22 - 	...
       (-P1 + P2.*gamma.*availlambda).*s12.*s22 - P2.*gamma.*availlambda.*(1 - s12 - s22).*s22) + 	...
     (-P1 + P2.*gamma.*availlambda).*s12.*((-P1 + P2.*gamma.*availlambda).*s12.*s22 + P2.*gamma.*availlambda.*(1 - s12 - s22).*s22) + 	...
     P2.*gamma.*availlambda.*(1 - s12 - s22).*((-P1 + P2.*gamma.*availlambda).*s12.*s22 + P2.*gamma.*availlambda.*(1 - s12 - s22).*s22)))./	...
  (-(s11.^2.*s21.^2.*pi1.^2) - pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*(-1 + s12).*s12 + 	...
   (-1 + pi1).*((-1 + s11).*s11.*pi1 + s21.*(-1 + s21 + pi1 + (-1 + 2.*s11).*s21.*pi1)).*s22 - (-1 + pi1).*(s21.*(-1 + pi1) + (-1 + s11).*s11.*pi1).*	...
    s22.^2) - 	...
 (2.*(-(((-P1 + P2.*gamma.*pi1.*availlambda).*s12 + P2.*gamma.*(-1 + pi1).*availlambda.*(-1 + s22)).*s22.*(-(pi1.*s11.*s21) + 	...
        (-1 + pi1).*s12.*s22)) + s12.*(P1.*(-1 + pi1).*(-1 + s12) + (P1.*pi1 - P2.*gamma.*availlambda).*s22).*	...
      (-(pi1.*(-1 + s21).*s21) + (-1 + pi1).*(-1 + s22).*s22)).^2)./	...
  (((-1 + s12).*s12.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
     (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*(-(pi1.*(-1 + s21).*s21) + 	...
       (-1 + pi1).*(-1 + s22).*s22)).^2.*(-(X1*betas) + delta1).^2) - 	...
 (2.*(-(((-P1 + P2.*gamma.*pi1.*availlambda).*s12 + P2.*gamma.*(-1 + pi1).*availlambda.*(-1 + s22)).*s22.*(-(pi1.*s11.*s21) + 	...
       (-1 + pi1).*s12.*s22)) + s12.*(P1.*(-1 + pi1).*(-1 + s12) + (P1.*pi1 - P2.*gamma.*availlambda).*s22).*	...
     (-(pi1.*(-1 + s21).*s21) + (-1 + pi1).*(-1 + s22).*s22)).*	...
   ((-1 + s12).*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22).*(P1.*s12.*(1 - s12 - s22) + 	...
      (P1 - P2.*gamma.*availlambda).*s12.*s22) + s12.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22).*	...
     (P1.*s12.*(1 - s12 - s22) + (P1 - P2.*gamma.*availlambda).*s12.*s22) + 	...
    (-(pi1.*(-1 + s21).*s21) + (-1 + pi1).*(-1 + s22).*s22).*	...
     ((-1 + pi1).*(-1 + s12).*(P1.*s12.*(1 - s12 - s22) + (P1 - P2.*gamma.*availlambda).*s12.*s22) + 	...
      (-1 + pi1).*s12.*(P1.*s12.*(1 - s12 - s22) + (P1 - P2.*gamma.*availlambda).*s12.*s22)) + 	...
    (-1 + s12).*s12.*((-1 + pi1).*s22.*(P1.*s12.*(1 - s12 - s22) + (P1 - P2.*gamma.*availlambda).*s12.*s22) + 	...
      (-1 + pi1).*s12.*((-P1 + P2.*gamma.*availlambda).*s12.*s22 + P2.*gamma.*availlambda.*(1 - s12 - s22).*s22)) + 	...
    (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*	...
     ((-1 + pi1).*(-1 + s22).*((-P1 + P2.*gamma.*availlambda).*s12.*s22 + P2.*gamma.*availlambda.*(1 - s12 - s22).*s22) + 	...
      (-1 + pi1).*s22.*((-P1 + P2.*gamma.*availlambda).*s12.*s22 + P2.*gamma.*availlambda.*(1 - s12 - s22).*s22))))./	...
  (((-1 + s12).*s12.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
     (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*(-(pi1.*(-1 + s21).*s21) + 	...
       (-1 + pi1).*(-1 + s22).*s22)).^2.*(-(X1*betas) + delta1)) + 	...
 (2.*(-(((-P1 + P2.*gamma.*pi1.*availlambda).*s12 + P2.*gamma.*(-1 + pi1).*availlambda.*(-1 + s22)).*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22).*	...
      ((-P1 + P2.*gamma.*availlambda).*s12.*s22 + P2.*gamma.*availlambda.*(1 - s12 - s22).*s22)) + 	...
    (P1.*(-1 + pi1).*(-1 + s12) + (P1.*pi1 - P2.*gamma.*availlambda).*s22).*(P1.*s12.*(1 - s12 - s22) + 	...
      (P1 - P2.*gamma.*availlambda).*s12.*s22).*(-(pi1.*(-1 + s21).*s21) + (-1 + pi1).*(-1 + s22).*s22) - 	...
    s22.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22).*	...
     ((-P1 + P2.*gamma.*pi1.*availlambda).*(P1.*s12.*(1 - s12 - s22) + (P1 - P2.*gamma.*availlambda).*s12.*s22) + 	...
      P2.*gamma.*(-1 + pi1).*availlambda.*((-P1 + P2.*gamma.*availlambda).*s12.*s22 + P2.*gamma.*availlambda.*(1 - s12 - s22).*s22)) + 	...
    s12.*(-(pi1.*(-1 + s21).*s21) + (-1 + pi1).*(-1 + s22).*s22).*	...
     (P1.*(-1 + pi1).*(P1.*s12.*(1 - s12 - s22) + (P1 - P2.*gamma.*availlambda).*s12.*s22) + 	...
      (P1.*pi1 - P2.*gamma.*availlambda).*((-P1 + P2.*gamma.*availlambda).*s12.*s22 + P2.*gamma.*availlambda.*(1 - s12 - s22).*s22)) - 	...
    ((-P1 + P2.*gamma.*pi1.*availlambda).*s12 + P2.*gamma.*(-1 + pi1).*availlambda.*(-1 + s22)).*s22.*	...
     ((-1 + pi1).*s22.*(P1.*s12.*(1 - s12 - s22) + (P1 - P2.*gamma.*availlambda).*s12.*s22) + 	...
      (-1 + pi1).*s12.*((-P1 + P2.*gamma.*availlambda).*s12.*s22 + P2.*gamma.*availlambda.*(1 - s12 - s22).*s22)) + 	...
    s12.*(P1.*(-1 + pi1).*(-1 + s12) + (P1.*pi1 - P2.*gamma.*availlambda).*s22).*	...
     ((-1 + pi1).*(-1 + s22).*((-P1 + P2.*gamma.*availlambda).*s12.*s22 + P2.*gamma.*availlambda.*(1 - s12 - s22).*s22) + 	...
      (-1 + pi1).*s22.*((-P1 + P2.*gamma.*availlambda).*s12.*s22 + P2.*gamma.*availlambda.*(1 - s12 - s22).*s22))))./	...
  (((-1 + s12).*s12.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
    (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*(-(pi1.*(-1 + s21).*s21) + 	...
      (-1 + pi1).*(-1 + s22).*s22)).*(-(X1*betas) + delta1)) - 	...
 (2.*((-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*((-P1 + P2.*gamma.*pi1.*availlambda).*s12 + 	...
       P2.*gamma.*(-1 + pi1).*availlambda.*(-1 + s22)).*s22 + (-1 + s12).*s12.^2.*(P1.*(-1 + pi1).*(-1 + s12) + 	...
       (P1.*pi1 - P2.*gamma.*availlambda).*s22)).^2)./(((-1 + s12).*s12.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
     (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*(-(pi1.*(-1 + s21).*s21) + 	...
       (-1 + pi1).*(-1 + s22).*s22)).^2.*(-(X2*betas) + delta2).^2) - 	...
 (2.*(2.*(-1 + s12).*s12.*(P1.*(-1 + pi1).*(-1 + s12) + (P1.*pi1 - P2.*gamma.*availlambda).*s22).*	...
     (P1.*s12.*(1 - s12 - s22) + (P1 - P2.*gamma.*availlambda).*s12.*s22) + 	...
    s12.^2.*(P1.*(-1 + pi1).*(-1 + s12) + (P1.*pi1 - P2.*gamma.*availlambda).*s22).*(P1.*s12.*(1 - s12 - s22) + 	...
      (P1 - P2.*gamma.*availlambda).*s12.*s22) + (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*	...
     ((-P1 + P2.*gamma.*pi1.*availlambda).*s12 + P2.*gamma.*(-1 + pi1).*availlambda.*(-1 + s22)).*((-P1 + P2.*gamma.*availlambda).*s12.*s22 + 	...
      P2.*gamma.*availlambda.*(1 - s12 - s22).*s22) + ((-P1 + P2.*gamma.*pi1.*availlambda).*s12 + P2.*gamma.*(-1 + pi1).*availlambda.*(-1 + s22)).*s22.*	...
     ((-1 + pi1).*(-1 + s12).*(P1.*s12.*(1 - s12 - s22) + (P1 - P2.*gamma.*availlambda).*s12.*s22) + 	...
      (-1 + pi1).*s12.*(P1.*s12.*(1 - s12 - s22) + (P1 - P2.*gamma.*availlambda).*s12.*s22)) + 	...
    (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*s22.*	...
     ((-P1 + P2.*gamma.*pi1.*availlambda).*(P1.*s12.*(1 - s12 - s22) + (P1 - P2.*gamma.*availlambda).*s12.*s22) + 	...
      P2.*gamma.*(-1 + pi1).*availlambda.*((-P1 + P2.*gamma.*availlambda).*s12.*s22 + P2.*gamma.*availlambda.*(1 - s12 - s22).*s22)) + 	...
    (-1 + s12).*s12.^2.*(P1.*(-1 + pi1).*(P1.*s12.*(1 - s12 - s22) + (P1 - P2.*gamma.*availlambda).*s12.*s22) + 	...
      (P1.*pi1 - P2.*gamma.*availlambda).*((-P1 + P2.*gamma.*availlambda).*s12.*s22 + P2.*gamma.*availlambda.*(1 - s12 - s22).*s22))))./	...
  (((-1 + s12).*s12.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
    (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*(-(pi1.*(-1 + s21).*s21) + 	...
      (-1 + pi1).*(-1 + s22).*s22)).*(-(X2*betas) + delta2)) + 	...
 (2.*((-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*((-P1 + P2.*gamma.*pi1.*availlambda).*s12 + 	...
      P2.*gamma.*(-1 + pi1).*availlambda.*(-1 + s22)).*s22 + (-1 + s12).*s12.^2.*(P1.*(-1 + pi1).*(-1 + s12) + 	...
      (P1.*pi1 - P2.*gamma.*availlambda).*s22)).*((-1 + s12).*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22).*	...
     (P1.*s12.*(1 - s12 - s22) + (P1 - P2.*gamma.*availlambda).*s12.*s22) + 	...
    s12.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22).*(P1.*s12.*(1 - s12 - s22) + 	...
      (P1 - P2.*gamma.*availlambda).*s12.*s22) + (-(pi1.*(-1 + s21).*s21) + (-1 + pi1).*(-1 + s22).*s22).*	...
     ((-1 + pi1).*(-1 + s12).*(P1.*s12.*(1 - s12 - s22) + (P1 - P2.*gamma.*availlambda).*s12.*s22) + 	...
      (-1 + pi1).*s12.*(P1.*s12.*(1 - s12 - s22) + (P1 - P2.*gamma.*availlambda).*s12.*s22)) + 	...
    (-1 + s12).*s12.*((-1 + pi1).*s22.*(P1.*s12.*(1 - s12 - s22) + (P1 - P2.*gamma.*availlambda).*s12.*s22) + 	...
      (-1 + pi1).*s12.*((-P1 + P2.*gamma.*availlambda).*s12.*s22 + P2.*gamma.*availlambda.*(1 - s12 - s22).*s22)) + 	...
    (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*	...
     ((-1 + pi1).*(-1 + s22).*((-P1 + P2.*gamma.*availlambda).*s12.*s22 + P2.*gamma.*availlambda.*(1 - s12 - s22).*s22) + 	...
      (-1 + pi1).*s22.*((-P1 + P2.*gamma.*availlambda).*s12.*s22 + P2.*gamma.*availlambda.*(1 - s12 - s22).*s22))))./	...
  (((-1 + s12).*s12.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
     (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*(-(pi1.*(-1 + s21).*s21) + 	...
       (-1 + pi1).*(-1 + s22).*s22)).^2.*(-(X2*betas) + delta2)));	
	
hessian(2,1) = sum((-((-1 + s11).*s11.*pi1.*(-1 + s12 + s22).*(P1.*s12.*(1 - s12 - s22) + (P1 - P2.*gamma.*availlambda).*s12.*s22 - 	...
      (-P1 + P2.*gamma.*availlambda).*s12.*s22 - P2.*gamma.*availlambda.*(1 - s12 - s22).*s22)) - 	...
   (-1 + s11).*s11.*pi1.*(s12 - s22).*(P1.*s12.*(1 - s12 - s22) + (P1 - P2.*gamma.*availlambda).*s12.*s22 + 	...
     (-P1 + P2.*gamma.*availlambda).*s12.*s22 + P2.*gamma.*availlambda.*(1 - s12 - s22).*s22) + 	...
   s21.*(-1 + pi1).*((1 - s12).*(P1.*s12.*(1 - s12 - s22) + (P1 - P2.*gamma.*availlambda).*s12.*s22) - 	...
     s12.*(P1.*s12.*(1 - s12 - s22) + (P1 - P2.*gamma.*availlambda).*s12.*s22) + 	...
     (-1 + s22).*((-P1 + P2.*gamma.*availlambda).*s12.*s22 + P2.*gamma.*availlambda.*(1 - s12 - s22).*s22) + 	...
     s22.*((-P1 + P2.*gamma.*availlambda).*s12.*s22 + P2.*gamma.*availlambda.*(1 - s12 - s22).*s22)) + 	...
   s21.*(-(pi1.*(-1 + s12).*(P1.*s12.*(1 - s12 - s22) + (P1 - P2.*gamma.*availlambda).*s12.*s22)) - 	...
     pi1.*s12.*(P1.*s12.*(1 - s12 - s22) + (P1 - P2.*gamma.*availlambda).*s12.*s22) + 	...
     (-1 + pi1).*(-1 + s22).*((-P1 + P2.*gamma.*availlambda).*s12.*s22 + P2.*gamma.*availlambda.*(1 - s12 - s22).*s22) + 	...
     (-1 + pi1).*s22.*((-P1 + P2.*gamma.*availlambda).*s12.*s22 + P2.*gamma.*availlambda.*(1 - s12 - s22).*s22)) - 	...
   (-1 + s11).*s11.*(pi1.*(-1 + s12 + s22).*(P1.*s12.*(1 - s12 - s22) + (P1 - P2.*gamma.*availlambda).*s12.*s22 - 	...
       (-P1 + P2.*gamma.*availlambda).*s12.*s22 - P2.*gamma.*availlambda.*(1 - s12 - s22).*s22) + 	...
     (-1 + s22).*((-P1 + P2.*gamma.*availlambda).*s12.*s22 + P2.*gamma.*availlambda.*(1 - s12 - s22).*s22) + 	...
     s22.*((-P1 + P2.*gamma.*availlambda).*s12.*s22 + P2.*gamma.*availlambda.*(1 - s12 - s22).*s22) + 	...
     pi1.*(s12 - s22).*(P1.*s12.*(1 - s12 - s22) + (P1 - P2.*gamma.*availlambda).*s12.*s22 + 	...
       (-P1 + P2.*gamma.*availlambda).*s12.*s22 + P2.*gamma.*availlambda.*(1 - s12 - s22).*s22)) - 	...
   s21.^2.*((-1 + pi1 + s12 - pi1.*s12).*(P1.*s12.*(1 - s12 - s22) + (P1 - P2.*gamma.*availlambda).*s12.*s22) + 	...
     (-1 + 2.*s11).*(-1 + pi1).*((-P1 + P2.*gamma.*availlambda).*s12.*s22 + P2.*gamma.*availlambda.*(1 - s12 - s22).*s22) + 	...
     (1 - pi1 + 2.*s11.*pi1).*((-P1 + P2.*gamma.*availlambda).*s12.*s22 + P2.*gamma.*availlambda.*(1 - s12 - s22).*s22) + 	...
     s12.*(P1.*s12.*(1 - s12 - s22) + (P1 - P2.*gamma.*availlambda).*s12.*s22 - 	...
       pi1.*(P1.*s12.*(1 - s12 - s22) + (P1 - P2.*gamma.*availlambda).*s12.*s22)) + 	...
     pi1.*((1 - s12).*(P1.*s12.*(1 - s12 - s22) + (P1 - P2.*gamma.*availlambda).*s12.*s22) - 	...
       s12.*(P1.*s12.*(1 - s12 - s22) + (P1 - P2.*gamma.*availlambda).*s12.*s22))))./	...
  (s21.^2.*(pi1.*(-(s11.^2.*pi1) + s12.*(-1 + pi1 + s12 - pi1.*s12)) + (-1 + pi1).*(1 - pi1 + 2.*s11.*pi1).*s22) - 	...
   s21.*(-1 + pi1).*(-(pi1.*(-1 + s12).*s12) + (-1 + pi1).*(-1 + s22).*s22) + 	...
   (-1 + s11).*s11.*pi1.*((-1 + s22).*s22 + pi1.*(s12 - s22).*(-1 + s12 + s22))) - 	...
 ((-((-1 + s11).*s11.*pi1.*(s12 - s22).*(-1 + s12 + s22)) - 	...
    s21.^2.*(-(s11.^2.*pi1) + s12.*(-1 + pi1 + s12 - pi1.*s12) + pi1.*(-s11.^2 + (1 - s12).*s12) + 	...
      (-1 + 2.*s11).*(-1 + pi1).*s22 + (1 - pi1 + 2.*s11.*pi1).*s22) + 	...
    s21.*(-1 + pi1).*((1 - s12).*s12 + (-1 + s22).*s22) + 	...
    s21.*(-(pi1.*(-1 + s12).*s12) + (-1 + pi1).*(-1 + s22).*s22) - 	...
    (-1 + s11).*s11.*((-1 + s22).*s22 + pi1.*(s12 - s22).*(-1 + s12 + s22))).*	...
   (-(s21.*(-1 + pi1).*(-(pi1.*(-1 + s12).*(P1.*s12.*(1 - s12 - s22) + (P1 - P2.*gamma.*availlambda).*s12.*s22)) - 	...
       pi1.*s12.*(P1.*s12.*(1 - s12 - s22) + (P1 - P2.*gamma.*availlambda).*s12.*s22) + 	...
       (-1 + pi1).*(-1 + s22).*((-P1 + P2.*gamma.*availlambda).*s12.*s22 + P2.*gamma.*availlambda.*(1 - s12 - s22).*s22) + 	...
       (-1 + pi1).*s22.*((-P1 + P2.*gamma.*availlambda).*s12.*s22 + P2.*gamma.*availlambda.*(1 - s12 - s22).*s22))) + 	...
    (-1 + s11).*s11.*pi1.*(pi1.*(-1 + s12 + s22).*(P1.*s12.*(1 - s12 - s22) + (P1 - P2.*gamma.*availlambda).*s12.*s22 - 	...
        (-P1 + P2.*gamma.*availlambda).*s12.*s22 - P2.*gamma.*availlambda.*(1 - s12 - s22).*s22) + 	...
      (-1 + s22).*((-P1 + P2.*gamma.*availlambda).*s12.*s22 + P2.*gamma.*availlambda.*(1 - s12 - s22).*s22) + 	...
      s22.*((-P1 + P2.*gamma.*availlambda).*s12.*s22 + P2.*gamma.*availlambda.*(1 - s12 - s22).*s22) + 	...
      pi1.*(s12 - s22).*(P1.*s12.*(1 - s12 - s22) + (P1 - P2.*gamma.*availlambda).*s12.*s22 + 	...
        (-P1 + P2.*gamma.*availlambda).*s12.*s22 + P2.*gamma.*availlambda.*(1 - s12 - s22).*s22)) + 	...
    s21.^2.*((-1 + pi1).*(1 - pi1 + 2.*s11.*pi1).*((-P1 + P2.*gamma.*availlambda).*s12.*s22 + P2.*gamma.*availlambda.*(1 - s12 - s22).*s22) + 	...
      pi1.*((-1 + pi1 + s12 - pi1.*s12).*(P1.*s12.*(1 - s12 - s22) + (P1 - P2.*gamma.*availlambda).*s12.*s22) + 	...
        s12.*(P1.*s12.*(1 - s12 - s22) + (P1 - P2.*gamma.*availlambda).*s12.*s22 - 	...
          pi1.*(P1.*s12.*(1 - s12 - s22) + (P1 - P2.*gamma.*availlambda).*s12.*s22))))))./	...
  (s21.^2.*(pi1.*(-(s11.^2.*pi1) + s12.*(-1 + pi1 + s12 - pi1.*s12)) + (-1 + pi1).*(1 - pi1 + 2.*s11.*pi1).*s22) - 	...
    s21.*(-1 + pi1).*(-(pi1.*(-1 + s12).*s12) + (-1 + pi1).*(-1 + s22).*s22) + 	...
    (-1 + s11).*s11.*pi1.*((-1 + s22).*s22 + pi1.*(s12 - s22).*(-1 + s12 + s22))).^2);	
	
hessian(1,2) = hessian(2,1);	
	
hessian(3,3) =sum(-((-((P1 - P2).*pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*availlambda.*(1 - s12).*(-1 + s12).*s12) - 	...
     (P1 - P2).*pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*availlambda.*(1 - s12).*s12.^2 - 	...
     (P1 - P2).*(-1 + pi1).*((-1 + s11).*s11.*pi1 + s21.*(-1 + s21 + pi1 + (-1 + 2.*s11).*s21.*pi1)).*availlambda.*s12.*s22 + 	...
     2.*(P1 - P2).*(-1 + pi1).*(s21.*(-1 + pi1) + (-1 + s11).*s11.*pi1).*availlambda.*s12.*s22.^2).^2./	...
   (-(s11.^2.*s21.^2.*pi1.^2) - pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*(-1 + s12).*s12 + 	...
     (-1 + pi1).*((-1 + s11).*s11.*pi1 + s21.*(-1 + s21 + pi1 + (-1 + 2.*s11).*s21.*pi1)).*s22 - (-1 + pi1).*(s21.*(-1 + pi1) + (-1 + s11).*s11.*pi1).*	...
      s22.^2).^2) + (-((P1 - P2).^2.*pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*availlambda.^2.*(1 - s12).^2.*(-1 + s12).*s12) - 	...
   3.*(P1 - P2).^2.*pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*availlambda.^2.*(1 - s12).^2.*s12.^2 + 	...
   (P1 - P2).^2.*pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*availlambda.^2.*(1 - s12).*(-1 + s12).*s12.^2 + 	...
   (P1 - P2).^2.*pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*availlambda.^2.*(1 - s12).*s12.^3 - 	...
   (P1 - P2).^2.*(-1 + pi1).*((-1 + s11).*s11.*pi1 + s21.*(-1 + s21 + pi1 + (-1 + 2.*s11).*s21.*pi1)).*availlambda.^2.*(1 - s12).*s12.*s22 + 	...
   (P1 - P2).^2.*(-1 + pi1).*((-1 + s11).*s11.*pi1 + s21.*(-1 + s21 + pi1 + (-1 + 2.*s11).*s21.*pi1)).*availlambda.^2.*s12.^2.*s22 + 	...
   2.*(P1 - P2).^2.*(-1 + pi1).*(s21.*(-1 + pi1) + (-1 + s11).*s11.*pi1).*availlambda.^2.*(1 - s12).*s12.*s22.^2 - 	...
   4.*(P1 - P2).^2.*(-1 + pi1).*(s21.*(-1 + pi1) + (-1 + s11).*s11.*pi1).*availlambda.^2.*s12.^2.*s22.^2)./	...
  (-(s11.^2.*s21.^2.*pi1.^2) - pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*(-1 + s12).*s12 + 	...
   (-1 + pi1).*((-1 + s11).*s11.*pi1 + s21.*(-1 + s21 + pi1 + (-1 + 2.*s11).*s21.*pi1)).*s22 - (-1 + pi1).*(s21.*(-1 + pi1) + (-1 + s11).*s11.*pi1).*	...
    s22.^2) - (2.*(P1 - P2).^2.*(-1 + pi1).^2.*availlambda.^2.*s12.^2.*	...
   ((pi1 - pi1.*s12).*s21.^2 - (-1 + pi1).*s22.*(-1 + s12 + s22) + pi1.*s21.*(-1 + s12 + s11.*s22)).^	...
    2)./(((-1 + s12).*s12.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
     (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*(-(pi1.*(-1 + s21).*s21) + 	...
       (-1 + pi1).*(-1 + s22).*s22)).^2.*(-(X1*betas) + delta1).^2) + 	...
 (2.*(P1 - P2).^2.*(-1 + pi1).*availlambda.^2.*(1 - s12).*s12.*((pi1 - pi1.*s12).*s21.^2 - (-1 + pi1).*s22.*(-1 + s12 + s22) + 	...
    pi1.*s21.*(-1 + s12 + s11.*s22)))./	...
  (((-1 + s12).*s12.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
    (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*(-(pi1.*(-1 + s21).*s21) + 	...
      (-1 + pi1).*(-1 + s22).*s22)).*(-(X1*betas) + delta1)) + 	...
 (2.*(P1 - P2).*(-1 + pi1).*availlambda.*s12.*(-((P1 - P2).*pi1.*availlambda.*(1 - s12).*s12.*s21.^2) + 	...
    (P1 - P2).*(-1 + pi1).*availlambda.*s12.*s22.*(-1 + s12 + s22) - 	...
    (-1 + pi1).*s22.*((P1 - P2).*availlambda.*(1 - s12).*s12 - (P1 - P2).*availlambda.*s12.*s22) + 	...
    pi1.*s21.*((P1 - P2).*availlambda.*(1 - s12).*s12 - (P1 - P2).*availlambda.*s11.*s12.*s22)))./	...
  (((-1 + s12).*s12.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
    (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*(-(pi1.*(-1 + s21).*s21) + 	...
      (-1 + pi1).*(-1 + s22).*s22)).*(-(X1*betas) + delta1)) - 	...
 (2.*(P1 - P2).*(-1 + pi1).*availlambda.*s12.*((pi1 - pi1.*s12).*s21.^2 - (-1 + pi1).*s22.*(-1 + s12 + s22) + 	...
    pi1.*s21.*(-1 + s12 + s11.*s22)).*((P1 - P2).*availlambda.*(1 - s12).*(-1 + s12).*s12.*	...
     (-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + (P1 - P2).*availlambda.*(1 - s12).*s12.^2.*	...
     (-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + (-1 + s12).*s12.*	...
     ((P1 - P2).*(-1 + pi1).*availlambda.*(1 - s12).*s12.*s22 - (P1 - P2).*(-1 + pi1).*availlambda.*s12.^2.*s22) + 	...
    ((P1 - P2).*(-1 + pi1).*availlambda.*(1 - s12).*(-1 + s12).*s12 + (P1 - P2).*(-1 + pi1).*availlambda.*(1 - s12).*s12.^2).*	...
     (-(pi1.*(-1 + s21).*s21) + (-1 + pi1).*(-1 + s22).*s22) + 	...
    (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*(-((P1 - P2).*(-1 + pi1).*availlambda.*s12.*(-1 + s22).*s22) - 	...
      (P1 - P2).*(-1 + pi1).*availlambda.*s12.*s22.^2)))./	...
  (((-1 + s12).*s12.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
     (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*(-(pi1.*(-1 + s21).*s21) + 	...
       (-1 + pi1).*(-1 + s22).*s22)).^2.*(-(X1*betas) + delta1)) - 	...
 (2.*(P1 - P2).^2.*(-1 + pi1).^2.*availlambda.^2.*s12.^2.*(-(pi1.*(-1 + s11).*s11.*s22) + 	...
     (-1 + s12).*s12.*(-1 + s12 + (-1 + pi1).*s22)).^2)./	...
  (((-1 + s12).*s12.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
     (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*(-(pi1.*(-1 + s21).*s21) + 	...
       (-1 + pi1).*(-1 + s22).*s22)).^2.*(-(X2*betas) + delta2).^2) - 	...
 (2.*(P1 - P2).^2.*(-1 + pi1).*availlambda.^2.*(1 - s12).*s12.*(-(pi1.*(-1 + s11).*s11.*s22) + 	...
    (-1 + s12).*s12.*(-1 + s12 + (-1 + pi1).*s22)))./	...
  (((-1 + s12).*s12.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
    (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*(-(pi1.*(-1 + s21).*s21) + 	...
      (-1 + pi1).*(-1 + s22).*s22)).*(-(X2*betas) + delta2)) - 	...
 (2.*(P1 - P2).*(-1 + pi1).*availlambda.*s12.*((P1 - P2).*pi1.*availlambda.*(-1 + s11).*s11.*s12.*s22 + 	...
    (P1 - P2).*availlambda.*(1 - s12).*(-1 + s12).*s12.*(-1 + s12 + (-1 + pi1).*s22) + 	...
    (P1 - P2).*availlambda.*(1 - s12).*s12.^2.*(-1 + s12 + (-1 + pi1).*s22) + 	...
    (-1 + s12).*s12.*((P1 - P2).*availlambda.*(1 - s12).*s12 - (P1 - P2).*(-1 + pi1).*availlambda.*s12.*s22)))./	...
  (((-1 + s12).*s12.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
    (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*(-(pi1.*(-1 + s21).*s21) + 	...
      (-1 + pi1).*(-1 + s22).*s22)).*(-(X2*betas) + delta2)) + 	...
 (2.*(P1 - P2).*(-1 + pi1).*availlambda.*s12.*(-(pi1.*(-1 + s11).*s11.*s22) + 	...
    (-1 + s12).*s12.*(-1 + s12 + (-1 + pi1).*s22)).*	...
   ((P1 - P2).*availlambda.*(1 - s12).*(-1 + s12).*s12.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
    (P1 - P2).*availlambda.*(1 - s12).*s12.^2.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
    (-1 + s12).*s12.*((P1 - P2).*(-1 + pi1).*availlambda.*(1 - s12).*s12.*s22 - (P1 - P2).*(-1 + pi1).*availlambda.*s12.^2.*s22) + 	...
    ((P1 - P2).*(-1 + pi1).*availlambda.*(1 - s12).*(-1 + s12).*s12 + (P1 - P2).*(-1 + pi1).*availlambda.*(1 - s12).*s12.^2).*	...
     (-(pi1.*(-1 + s21).*s21) + (-1 + pi1).*(-1 + s22).*s22) + 	...
    (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*(-((P1 - P2).*(-1 + pi1).*availlambda.*s12.*(-1 + s22).*s22) - 	...
      (P1 - P2).*(-1 + pi1).*availlambda.*s12.*s22.^2)))./	...
  (((-1 + s12).*s12.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
     (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*(-(pi1.*(-1 + s21).*s21) + 	...
       (-1 + pi1).*(-1 + s22).*s22)).^2.*(-(X2*betas) + delta2)));	
	
hessian(1,3)=sum((-((-1 + s11).*s11.*pi1.*(s12 - s22).*((P1 - P2).*availlambda.*(1 - s12).*s12 - (P1 - P2).*availlambda.*s12.*s22)) - 	...
   (-1 + s11).*s11.*pi1.*(-1 + s12 + s22).*((P1 - P2).*availlambda.*(1 - s12).*s12 + (P1 - P2).*availlambda.*s12.*s22) - 	...
   s21.^2.*((P1 - P2).*availlambda.*(1 - s12).*s12.*(-1 + pi1 + s12 - pi1.*s12) + 	...
     s12.*((P1 - P2).*availlambda.*(1 - s12).*s12 - (P1 - P2).*pi1.*availlambda.*(1 - s12).*s12) + 	...
     pi1.*((P1 - P2).*availlambda.*(1 - s12).^2.*s12 - (P1 - P2).*availlambda.*(1 - s12).*s12.^2) - 	...
     (P1 - P2).*(-1 + 2.*s11).*(-1 + pi1).*availlambda.*s12.*s22 - (P1 - P2).*(1 - pi1 + 2.*s11.*pi1).*availlambda.*s12.*s22) + 	...
   s21.*(-1 + pi1).*((P1 - P2).*availlambda.*(1 - s12).^2.*s12 - (P1 - P2).*availlambda.*(1 - s12).*s12.^2 - 	...
     (P1 - P2).*availlambda.*s12.*(-1 + s22).*s22 - (P1 - P2).*availlambda.*s12.*s22.^2) + 	...
   s21.*(-((P1 - P2).*pi1.*availlambda.*(1 - s12).*(-1 + s12).*s12) - (P1 - P2).*pi1.*availlambda.*(1 - s12).*s12.^2 - 	...
     (P1 - P2).*(-1 + pi1).*availlambda.*s12.*(-1 + s22).*s22 - (P1 - P2).*(-1 + pi1).*availlambda.*s12.*s22.^2) - 	...
   (-1 + s11).*s11.*(-((P1 - P2).*availlambda.*s12.*(-1 + s22).*s22) - (P1 - P2).*availlambda.*s12.*s22.^2 + 	...
     pi1.*(s12 - s22).*((P1 - P2).*availlambda.*(1 - s12).*s12 - (P1 - P2).*availlambda.*s12.*s22) + 	...
     pi1.*(-1 + s12 + s22).*((P1 - P2).*availlambda.*(1 - s12).*s12 + (P1 - P2).*availlambda.*s12.*s22)))./	...
  (s21.^2.*(pi1.*(-(s11.^2.*pi1) + s12.*(-1 + pi1 + s12 - pi1.*s12)) + (-1 + pi1).*(1 - pi1 + 2.*s11.*pi1).*s22) - 	...
   s21.*(-1 + pi1).*(-(pi1.*(-1 + s12).*s12) + (-1 + pi1).*(-1 + s22).*s22) + 	...
   (-1 + s11).*s11.*pi1.*((-1 + s22).*s22 + pi1.*(s12 - s22).*(-1 + s12 + s22))) - 	...
 ((-((-1 + s11).*s11.*pi1.*(s12 - s22).*(-1 + s12 + s22)) - 	...
    s21.^2.*(-(s11.^2.*pi1) + s12.*(-1 + pi1 + s12 - pi1.*s12) + pi1.*(-s11.^2 + (1 - s12).*s12) + 	...
      (-1 + 2.*s11).*(-1 + pi1).*s22 + (1 - pi1 + 2.*s11.*pi1).*s22) + 	...
    s21.*(-1 + pi1).*((1 - s12).*s12 + (-1 + s22).*s22) + 	...
    s21.*(-(pi1.*(-1 + s12).*s12) + (-1 + pi1).*(-1 + s22).*s22) - 	...
    (-1 + s11).*s11.*((-1 + s22).*s22 + pi1.*(s12 - s22).*(-1 + s12 + s22))).*	...
   (s21.^2.*(pi1.*((P1 - P2).*availlambda.*(1 - s12).*s12.*(-1 + pi1 + s12 - pi1.*s12) + 	...
        s12.*((P1 - P2).*availlambda.*(1 - s12).*s12 - (P1 - P2).*pi1.*availlambda.*(1 - s12).*s12)) - 	...
      (P1 - P2).*(-1 + pi1).*(1 - pi1 + 2.*s11.*pi1).*availlambda.*s12.*s22) - 	...
    s21.*(-1 + pi1).*(-((P1 - P2).*pi1.*availlambda.*(1 - s12).*(-1 + s12).*s12) - (P1 - P2).*pi1.*availlambda.*(1 - s12).*s12.^2 - 	...
      (P1 - P2).*(-1 + pi1).*availlambda.*s12.*(-1 + s22).*s22 - (P1 - P2).*(-1 + pi1).*availlambda.*s12.*s22.^2) + 	...
    (-1 + s11).*s11.*pi1.*(-((P1 - P2).*availlambda.*s12.*(-1 + s22).*s22) - (P1 - P2).*availlambda.*s12.*s22.^2 + 	...
      pi1.*(s12 - s22).*((P1 - P2).*availlambda.*(1 - s12).*s12 - (P1 - P2).*availlambda.*s12.*s22) + 	...
      pi1.*(-1 + s12 + s22).*((P1 - P2).*availlambda.*(1 - s12).*s12 + (P1 - P2).*availlambda.*s12.*s22))))./	...
  (s21.^2.*(pi1.*(-(s11.^2.*pi1) + s12.*(-1 + pi1 + s12 - pi1.*s12)) + (-1 + pi1).*(1 - pi1 + 2.*s11.*pi1).*s22) - 	...
    s21.*(-1 + pi1).*(-(pi1.*(-1 + s12).*s12) + (-1 + pi1).*(-1 + s22).*s22) + 	...
    (-1 + s11).*s11.*pi1.*((-1 + s22).*s22 + pi1.*(s12 - s22).*(-1 + s12 + s22))).^2);	
	
hessian(3,1)=hessian(1,3);	
	
hessian(2,3) = sum(-(((-((P1 - P2).*pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*availlambda.*(1 - s12).*(-1 + s12).*s12) - 	...
     (P1 - P2).*pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*availlambda.*(1 - s12).*s12.^2 - 	...
     (P1 - P2).*(-1 + pi1).*((-1 + s11).*s11.*pi1 + s21.*(-1 + s21 + pi1 + (-1 + 2.*s11).*s21.*pi1)).*availlambda.*s12.*s22 + 	...
     2.*(P1 - P2).*(-1 + pi1).*(s21.*(-1 + pi1) + (-1 + s11).*s11.*pi1).*availlambda.*s12.*s22.^2).*	...
    (-(P1.*pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*(1 - s12).*(-1 + s12).*s12) - 	...
     P1.*pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*(1 - s12).*s12.^2 - 2.*P2.*(-1 + pi1).*(s21.*(-1 + pi1) + (-1 + s11).*s11.*pi1).*	...
      (1 - s22).*s22.^2 + P2.*(-1 + pi1).*((-1 + s11).*s11.*pi1 + s21.*(-1 + s21 + pi1 + (-1 + 2.*s11).*s21.*pi1)).*s22.*(1 - s22)))./	...
   (-(s11.^2.*s21.^2.*pi1.^2) - pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*(-1 + s12).*s12 + 	...
     (-1 + pi1).*((-1 + s11).*s11.*pi1 + s21.*(-1 + s21 + pi1 + (-1 + 2.*s11).*s21.*pi1)).*s22 - (-1 + pi1).*(s21.*(-1 + pi1) + (-1 + s11).*s11.*pi1).*	...
      s22.^2).^2) + (-(P1.*(P1 - P2).*pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*availlambda.*(1 - s12).^2.*(-1 + s12).*s12) - 	...
   3.*P1.*(P1 - P2).*pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*availlambda.*(1 - s12).^2.*s12.^2 + 	...
   P1.*(P1 - P2).*pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*availlambda.*(1 - s12).*(-1 + s12).*s12.^2 + 	...
   P1.*(P1 - P2).*pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*availlambda.*(1 - s12).*s12.^3 + 	...
   4.*(P1 - P2).*P2.*(-1 + pi1).*(s21.*(-1 + pi1) + (-1 + s11).*s11.*pi1).*availlambda.*s12.*(1 - s22).*s22.^2 - 	...
   2.*(P1 - P2).*P2.*(-1 + pi1).*(s21.*(-1 + pi1) + (-1 + s11).*s11.*pi1).*availlambda.*s12.*s22.^3 - 	...
   (P1 - P2).*P2.*(-1 + pi1).*((-1 + s11).*s11.*pi1 + s21.*(-1 + s21 + pi1 + (-1 + 2.*s11).*s21.*pi1)).*availlambda.*s12.*s22.*(1 - s22))./	...
  (-(s11.^2.*s21.^2.*pi1.^2) - pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*(-1 + s12).*s12 + 	...
   (-1 + pi1).*((-1 + s11).*s11.*pi1 + s21.*(-1 + s21 + pi1 + (-1 + 2.*s11).*s21.*pi1)).*s22 - (-1 + pi1).*(s21.*(-1 + pi1) + (-1 + s11).*s11.*pi1).*	...
    s22.^2) - (2.*(P1 - P2).*(-1 + pi1).*availlambda.*s12.*((pi1 - pi1.*s12).*s21.^2 - (-1 + pi1).*s22.*(-1 + s12 + s22) + 	...
    pi1.*s21.*(-1 + s12 + s11.*s22)).*((-((-P1 + P2.*gamma.*pi1.*availlambda).*s12) - P2.*gamma.*(-1 + pi1).*availlambda.*(-1 + s22)).*s22.*	...
     (-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + s12.*(P1.*(-1 + pi1).*(-1 + s12) + (P1.*pi1 - P2.*gamma.*availlambda).*s22).*	...
     (-(pi1.*(-1 + s21).*s21) + (-1 + pi1).*(-1 + s22).*s22)))./	...
  (((-1 + s12).*s12.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
     (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*(-(pi1.*(-1 + s21).*s21) + 	...
       (-1 + pi1).*(-1 + s22).*s22)).^2.*(-(X1*betas) + delta1).^2) - 	...
 (2.*((-((-P1 + P2.*gamma.*pi1.*availlambda).*s12) - P2.*gamma.*(-1 + pi1).*availlambda.*(-1 + s22)).*s22.*(-(pi1.*s11.*s21) + 	...
      (-1 + pi1).*s12.*s22) + s12.*(P1.*(-1 + pi1).*(-1 + s12) + (P1.*pi1 - P2.*gamma.*availlambda).*s22).*	...
     (-(pi1.*(-1 + s21).*s21) + (-1 + pi1).*(-1 + s22).*s22)).*	...
   ((P1 - P2).*availlambda.*(1 - s12).*(-1 + s12).*s12.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
    (P1 - P2).*availlambda.*(1 - s12).*s12.^2.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
    (-1 + s12).*s12.*((P1 - P2).*(-1 + pi1).*availlambda.*(1 - s12).*s12.*s22 - (P1 - P2).*(-1 + pi1).*availlambda.*s12.^2.*s22) + 	...
    ((P1 - P2).*(-1 + pi1).*availlambda.*(1 - s12).*(-1 + s12).*s12 + (P1 - P2).*(-1 + pi1).*availlambda.*(1 - s12).*s12.^2).*	...
     (-(pi1.*(-1 + s21).*s21) + (-1 + pi1).*(-1 + s22).*s22) + 	...
    (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*(-((P1 - P2).*(-1 + pi1).*availlambda.*s12.*(-1 + s22).*s22) - 	...
      (P1 - P2).*(-1 + pi1).*availlambda.*s12.*s22.^2)))./	...
  (((-1 + s12).*s12.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
     (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*(-(pi1.*(-1 + s21).*s21) + 	...
       (-1 + pi1).*(-1 + s22).*s22)).^2.*(-(X1*betas) + delta1)) + 	...
 (2.*(-((P1 - P2).*availlambda.*s12.*(-((-P1 + P2.*gamma.*pi1.*availlambda).*s12) - P2.*gamma.*(-1 + pi1).*availlambda.*(-1 + s22)).*s22.*	...
      (-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22)) + s22.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22).*	...
     (-((P1 - P2).*availlambda.*(-P1 + P2.*gamma.*pi1.*availlambda).*(1 - s12).*s12) + (P1 - P2).*P2.*gamma.*(-1 + pi1).*availlambda.^2.*s12.*s22) + 	...
    (-((-P1 + P2.*gamma.*pi1.*availlambda).*s12) - P2.*gamma.*(-1 + pi1).*availlambda.*(-1 + s22)).*s22.*	...
     ((P1 - P2).*(-1 + pi1).*availlambda.*(1 - s12).*s12.*s22 - (P1 - P2).*(-1 + pi1).*availlambda.*s12.^2.*s22) + 	...
    (P1 - P2).*availlambda.*(1 - s12).*s12.*(P1.*(-1 + pi1).*(-1 + s12) + (P1.*pi1 - P2.*gamma.*availlambda).*s22).*	...
     (-(pi1.*(-1 + s21).*s21) + (-1 + pi1).*(-1 + s22).*s22) + 	...
    s12.*(P1.*(P1 - P2).*(-1 + pi1).*availlambda.*(1 - s12).*s12 - (P1 - P2).*availlambda.*(P1.*pi1 - P2.*gamma.*availlambda).*s12.*s22).*	...
     (-(pi1.*(-1 + s21).*s21) + (-1 + pi1).*(-1 + s22).*s22) + 	...
    s12.*(P1.*(-1 + pi1).*(-1 + s12) + (P1.*pi1 - P2.*gamma.*availlambda).*s22).*(-((P1 - P2).*(-1 + pi1).*availlambda.*s12.*(-1 + s22).*s22) - 	...
      (P1 - P2).*(-1 + pi1).*availlambda.*s12.*s22.^2)))./	...
  (((-1 + s12).*s12.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
    (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*(-(pi1.*(-1 + s21).*s21) + 	...
      (-1 + pi1).*(-1 + s22).*s22)).*(-(X1*betas) + delta1)) - 	...
 (2.*(P1 - P2).*(-1 + pi1).*availlambda.*s12.*(-(pi1.*(-1 + s11).*s11.*s22) + 	...
    (-1 + s12).*s12.*(-1 + s12 + (-1 + pi1).*s22)).*	...
   ((-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*((-P1 + P2.*gamma.*pi1.*availlambda).*s12 + 	...
      P2.*gamma.*(-1 + pi1).*availlambda.*(-1 + s22)).*s22 + (-1 + s12).*s12.^2.*(P1.*(-1 + pi1).*(-1 + s12) + 	...
      (P1.*pi1 - P2.*gamma.*availlambda).*s22)))./(((-1 + s12).*s12.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
     (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*(-(pi1.*(-1 + s21).*s21) + 	...
       (-1 + pi1).*(-1 + s22).*s22)).^2.*(-(X2*betas) + delta2).^2) - 	...
 (2.*(-((P1 - P2).*availlambda.*s12.*(-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*	...
      ((-P1 + P2.*gamma.*pi1.*availlambda).*s12 + P2.*gamma.*(-1 + pi1).*availlambda.*(-1 + s22)).*s22) + 	...
    ((P1 - P2).*(-1 + pi1).*availlambda.*(1 - s12).*(-1 + s12).*s12 + (P1 - P2).*(-1 + pi1).*availlambda.*(1 - s12).*s12.^2).*	...
     ((-P1 + P2.*gamma.*pi1.*availlambda).*s12 + P2.*gamma.*(-1 + pi1).*availlambda.*(-1 + s22)).*s22 + 2.*(P1 - P2).*availlambda.*(1 - s12).*(-1 + s12).*	...
     s12.^2.*(P1.*(-1 + pi1).*(-1 + s12) + (P1.*pi1 - P2.*gamma.*availlambda).*s22) + (P1 - P2).*availlambda.*(1 - s12).*s12.^3.*	...
     (P1.*(-1 + pi1).*(-1 + s12) + (P1.*pi1 - P2.*gamma.*availlambda).*s22) + (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*	...
     s22.*((P1 - P2).*availlambda.*(-P1 + P2.*gamma.*pi1.*availlambda).*(1 - s12).*s12 - (P1 - P2).*P2.*gamma.*(-1 + pi1).*availlambda.^2.*s12.*s22) + 	...
    (-1 + s12).*s12.^2.*(P1.*(P1 - P2).*(-1 + pi1).*availlambda.*(1 - s12).*s12 - (P1 - P2).*availlambda.*(P1.*pi1 - P2.*gamma.*availlambda).*s12.*s22)))./	...
  (((-1 + s12).*s12.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
    (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*(-(pi1.*(-1 + s21).*s21) + 	...
      (-1 + pi1).*(-1 + s22).*s22)).*(-(X2*betas) + delta2)) + 	...
 (2.*((-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*((-P1 + P2.*gamma.*pi1.*availlambda).*s12 + 	...
      P2.*gamma.*(-1 + pi1).*availlambda.*(-1 + s22)).*s22 + (-1 + s12).*s12.^2.*(P1.*(-1 + pi1).*(-1 + s12) + 	...
      (P1.*pi1 - P2.*gamma.*availlambda).*s22)).*((P1 - P2).*availlambda.*(1 - s12).*(-1 + s12).*s12.*	...
     (-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + (P1 - P2).*availlambda.*(1 - s12).*s12.^2.*	...
     (-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + (-1 + s12).*s12.*	...
     ((P1 - P2).*(-1 + pi1).*availlambda.*(1 - s12).*s12.*s22 - (P1 - P2).*(-1 + pi1).*availlambda.*s12.^2.*s22) + 	...
    ((P1 - P2).*(-1 + pi1).*availlambda.*(1 - s12).*(-1 + s12).*s12 + (P1 - P2).*(-1 + pi1).*availlambda.*(1 - s12).*s12.^2).*	...
     (-(pi1.*(-1 + s21).*s21) + (-1 + pi1).*(-1 + s22).*s22) + 	...
    (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*(-((P1 - P2).*(-1 + pi1).*availlambda.*s12.*(-1 + s22).*s22) - 	...
      (P1 - P2).*(-1 + pi1).*availlambda.*s12.*s22.^2)))./	...
  (((-1 + s12).*s12.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
     (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*(-(pi1.*(-1 + s21).*s21) + 	...
       (-1 + pi1).*(-1 + s22).*s22)).^2.*(-(X2*betas) + delta2)));	
	
hessian(3,2)=hessian(2,3);	
	
hessian(4,4) = sum(-((gamma.*(Dur1./2 + Dur2.*gamma).*pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*(1 - availlambda).*(-1 + s12).*s12.*s22 + 	...
     gamma.*(Dur1./2 + Dur2.*gamma).*pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*(1 - availlambda).*s12.^2.*s22 + 	...
     gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*((-1 + s11).*s11.*pi1 + s21.*(-1 + s21 + pi1 + (-1 + 2.*s11).*s21.*pi1)).*(1 - availlambda).*(1 - s22).*s22 - 	...
     2.*gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(s21.*(-1 + pi1) + (-1 + s11).*s11.*pi1).*(1 - availlambda).*(1 - s22).*s22.^2).^2./	...
   (-(s11.^2.*s21.^2.*pi1.^2) - pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*(-1 + s12).*s12 + 	...
     (-1 + pi1).*((-1 + s11).*s11.*pi1 + s21.*(-1 + s21 + pi1 + (-1 + 2.*s11).*s21.*pi1)).*s22 - (-1 + pi1).*(s21.*(-1 + pi1) + (-1 + s11).*s11.*pi1).*	...
      s22.^2).^2) + (gamma.^2.*(Dur1./2 + Dur2.*gamma).^2.*pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*(1 - availlambda).^2.*(-1 + s12).*s12.*	...
    (1 - s22).*s22 + gamma.^2.*(Dur1./2 + Dur2.*gamma).^2.*pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*(1 - availlambda).^2.*s12.^2.*	...
    (1 - s22).*s22 + gamma.^2.*(Dur1./2 + Dur2.*gamma).^2.*(-1 + pi1).*((-1 + s11).*s11.*pi1 + s21.*(-1 + s21 + pi1 + (-1 + 2.*s11).*s21.*pi1)).*(1 - availlambda).^2.*	...
    (1 - s22).^2.*s22 - gamma.^2.*(Dur1./2 + Dur2.*gamma).^2.*pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*(1 - availlambda).^2.*(-1 + s12).*	...
    s12.*s22.^2 - 3.*gamma.^2.*(Dur1./2 + Dur2.*gamma).^2.*pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*(1 - availlambda).^2.*s12.^2.*s22.^2 - 	...
   gamma.^2.*(Dur1./2 + Dur2.*gamma).^2.*(-1 + pi1).*((-1 + s11).*s11.*pi1 + s21.*(-1 + s21 + pi1 + (-1 + 2.*s11).*s21.*pi1)).*(1 - availlambda).^2.*(1 - s22).*s22.^2 - 	...
   4.*gamma.^2.*(Dur1./2 + Dur2.*gamma).^2.*(-1 + pi1).*(s21.*(-1 + pi1) + (-1 + s11).*s11.*pi1).*(1 - availlambda).^2.*(1 - s22).^2.*s22.^2 + 	...
   2.*gamma.^2.*(Dur1./2 + Dur2.*gamma).^2.*(-1 + pi1).*(s21.*(-1 + pi1) + (-1 + s11).*s11.*pi1).*(1 - availlambda).^2.*(1 - s22).*s22.^3)./	...
  (-(s11.^2.*s21.^2.*pi1.^2) - pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*(-1 + s12).*s12 + 	...
   (-1 + pi1).*((-1 + s11).*s11.*pi1 + s21.*(-1 + s21 + pi1 + (-1 + 2.*s11).*s21.*pi1)).*s22 - (-1 + pi1).*(s21.*(-1 + pi1) + (-1 + s11).*s11.*pi1).*	...
    s22.^2) - (gamma.^2.*(Dur1 + 2.*Dur2.*gamma).^2.*(-1 + pi1).^2.*pi1.^2.*(-1 + availlambda).^2.*s21.^2.*	...
   (s12.*(-1 + s21) - s11.*(-1 + s22)).^2.*s22.^2)./	...
  (2.*((-1 + s12).*s12.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
     (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*(-(pi1.*(-1 + s21).*s21) + 	...
       (-1 + pi1).*(-1 + s22).*s22)).^2.*(-(X1*betas) + delta1).^2) + 	...
 (gamma.^2.*(Dur1./2 + Dur2.*gamma).*(Dur1 + 2.*Dur2.*gamma).*(-1 + pi1).*pi1.*(1 - availlambda).*(-1 + availlambda).*s21.*	...
   (s12.*(-1 + s21) - s11.*(-1 + s22)).*(1 - s22).*s22)./	...
  (((-1 + s12).*s12.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
    (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*(-(pi1.*(-1 + s21).*s21) + 	...
      (-1 + pi1).*(-1 + s22).*s22)).*(-(X1*betas) + delta1)) + 	...
 (gamma.*(Dur1 + 2.*Dur2.*gamma).*(-1 + pi1).*pi1.*(-1 + availlambda).*s21.*s22.*(-(gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*s12.*(-1 + s21).*s22) - 	...
    gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*s11.*(1 - s22).*s22))./	...
  (((-1 + s12).*s12.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
    (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*(-(pi1.*(-1 + s21).*s21) + 	...
      (-1 + pi1).*(-1 + s22).*s22)).*(-(X1*betas) + delta1)) - 	...
 (gamma.*(Dur1 + 2.*Dur2.*gamma).*(-1 + pi1).*pi1.*(-1 + availlambda).*s21.*(s12.*(-1 + s21) - s11.*(-1 + s22)).*s22.*	...
   (-(gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*(-1 + s12).*s12.*s22.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22)) - 	...
    gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*s12.^2.*s22.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
    (-(gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*(-1 + s12).*s12.*s22) - gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*s12.^2.*	...
       s22).*(-(pi1.*(-1 + s21).*s21) + (-1 + pi1).*(-1 + s22).*s22) + 	...
    (-1 + s12).*s12.*(gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*s12.*(1 - s22).*s22 - 	...
      gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*s12.*s22.^2) + 	...
    (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*	...
     (gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*(1 - s22).*(-1 + s22).*s22 + gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*	...
       (1 - s22).*s22.^2)))./(((-1 + s12).*s12.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
     (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*(-(pi1.*(-1 + s21).*s21) + 	...
       (-1 + pi1).*(-1 + s22).*s22)).^2.*(-(X1*betas) + delta1)) - 	...
 (gamma.^2.*(Dur1 + 2.*Dur2.*gamma).^2.*(-1 + pi1).^2.*(-1 + availlambda).^2.*s22.^2.*((-1 + s12).*s12.*(s12 + (-1 + pi1).*(-1 + s22)) + 	...
     pi1.*s11.*(-1 + s22) + s11.^2.*(pi1 - pi1.*s22)).^2)./	...
  (2.*((-1 + s12).*s12.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
     (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*(-(pi1.*(-1 + s21).*s21) + 	...
       (-1 + pi1).*(-1 + s22).*s22)).^2.*(-(X2*betas) + delta2).^2) + 	...
 (gamma.^2.*(Dur1./2 + Dur2.*gamma).*(Dur1 + 2.*Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*(-1 + availlambda).*(1 - s22).*s22.*	...
   ((-1 + s12).*s12.*(s12 + (-1 + pi1).*(-1 + s22)) + pi1.*s11.*(-1 + s22) + s11.^2.*(pi1 - pi1.*s22)))./	...
  (((-1 + s12).*s12.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
    (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*(-(pi1.*(-1 + s21).*s21) + 	...
      (-1 + pi1).*(-1 + s22).*s22)).*(-(X2*betas) + delta2)) + 	...
 (gamma.*(Dur1 + 2.*Dur2.*gamma).*(-1 + pi1).*(-1 + availlambda).*s22.*	...
   (-(gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*(-1 + s12).*s12.*(s12 + (-1 + pi1).*(-1 + s22)).*s22) - 	...
    gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*s12.^2.*(s12 + (-1 + pi1).*(-1 + s22)).*s22 + 	...
    gamma.*(Dur1./2 + Dur2.*gamma).*pi1.*(1 - availlambda).*s11.*(1 - s22).*s22 - gamma.*(Dur1./2 + Dur2.*gamma).*pi1.*(1 - availlambda).*s11.^2.*(1 - s22).*	...
     s22 + (-1 + s12).*s12.*(-(gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*s12.*s22) + 	...
      gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*(1 - s22).*s22)))./	...
  (((-1 + s12).*s12.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
    (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*(-(pi1.*(-1 + s21).*s21) + 	...
      (-1 + pi1).*(-1 + s22).*s22)).*(-(X2*betas) + delta2)) - 	...
 (gamma.*(Dur1 + 2.*Dur2.*gamma).*(-1 + pi1).*(-1 + availlambda).*s22.*((-1 + s12).*s12.*(s12 + (-1 + pi1).*(-1 + s22)) + 	...
    pi1.*s11.*(-1 + s22) + s11.^2.*(pi1 - pi1.*s22)).*	...
   (-(gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*(-1 + s12).*s12.*s22.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22)) - 	...
    gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*s12.^2.*s22.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
    (-(gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*(-1 + s12).*s12.*s22) - gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*s12.^2.*	...
       s22).*(-(pi1.*(-1 + s21).*s21) + (-1 + pi1).*(-1 + s22).*s22) + 	...
    (-1 + s12).*s12.*(gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*s12.*(1 - s22).*s22 - 	...
      gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*s12.*s22.^2) + 	...
    (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*	...
     (gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*(1 - s22).*(-1 + s22).*s22 + gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*	...
       (1 - s22).*s22.^2)))./(((-1 + s12).*s12.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
     (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*(-(pi1.*(-1 + s21).*s21) + 	...
       (-1 + pi1).*(-1 + s22).*s22)).^2.*(-(X2*betas) + delta2)));	
	
hessian(1,4) = sum((-((-1 + s11).*s11.*pi1.*(-1 + s12 + s22).*(-(gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*s12.*s22) - 	...
      gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*(1 - s22).*s22)) - (-1 + s11).*s11.*pi1.*(s12 - s22).*	...
    (-(gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*s12.*s22) + gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*(1 - s22).*s22) + 	...
   s21.*(-1 + pi1).*(-(gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*(1 - s12).*s12.*s22) + gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*s12.^2.*	...
      s22 + gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*(1 - s22).*(-1 + s22).*s22 + gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*(1 - s22).*	...
      s22.^2) + s21.*(gamma.*(Dur1./2 + Dur2.*gamma).*pi1.*(1 - availlambda).*(-1 + s12).*s12.*s22 + 	...
     gamma.*(Dur1./2 + Dur2.*gamma).*pi1.*(1 - availlambda).*s12.^2.*s22 + gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*(1 - s22).*(-1 + s22).*	...
      s22 + gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*(1 - s22).*s22.^2) - 	...
   s21.^2.*(-(gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*s12.*(-1 + pi1 + s12 - pi1.*s12).*s22) + 	...
     (-1 + 2.*s11).*gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*(1 - s22).*s22 + gamma.*(Dur1./2 + Dur2.*gamma).*(1 - pi1 + 2.*s11.*pi1).*(1 - availlambda).*	...
      (1 - s22).*s22 + s12.*(-(gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*s12.*s22) + 	...
       gamma.*(Dur1./2 + Dur2.*gamma).*pi1.*(1 - availlambda).*s12.*s22) + pi1.*(-(gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*(1 - s12).*s12.*s22) + 	...
       gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*s12.^2.*s22)) - 	...
   (-1 + s11).*s11.*(gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*(1 - s22).*(-1 + s22).*s22 + gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*(1 - s22).*	...
      s22.^2 + pi1.*(-1 + s12 + s22).*(-(gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*s12.*s22) - 	...
       gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*(1 - s22).*s22) + pi1.*(s12 - s22).*	...
      (-(gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*s12.*s22) + gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*(1 - s22).*s22)))./	...
  (s21.^2.*(pi1.*(-(s11.^2.*pi1) + s12.*(-1 + pi1 + s12 - pi1.*s12)) + (-1 + pi1).*(1 - pi1 + 2.*s11.*pi1).*s22) - 	...
   s21.*(-1 + pi1).*(-(pi1.*(-1 + s12).*s12) + (-1 + pi1).*(-1 + s22).*s22) + 	...
   (-1 + s11).*s11.*pi1.*((-1 + s22).*s22 + pi1.*(s12 - s22).*(-1 + s12 + s22))) - 	...
 ((-((-1 + s11).*s11.*pi1.*(s12 - s22).*(-1 + s12 + s22)) - 	...
    s21.^2.*(-(s11.^2.*pi1) + s12.*(-1 + pi1 + s12 - pi1.*s12) + pi1.*(-s11.^2 + (1 - s12).*s12) + 	...
      (-1 + 2.*s11).*(-1 + pi1).*s22 + (1 - pi1 + 2.*s11.*pi1).*s22) + 	...
    s21.*(-1 + pi1).*((1 - s12).*s12 + (-1 + s22).*s22) + 	...
    s21.*(-(pi1.*(-1 + s12).*s12) + (-1 + pi1).*(-1 + s22).*s22) - 	...
    (-1 + s11).*s11.*((-1 + s22).*s22 + pi1.*(s12 - s22).*(-1 + s12 + s22))).*	...
   (-(s21.*(-1 + pi1).*(gamma.*(Dur1./2 + Dur2.*gamma).*pi1.*(1 - availlambda).*(-1 + s12).*s12.*s22 + gamma.*(Dur1./2 + Dur2.*gamma).*pi1.*(1 - availlambda).*s12.^2.*	...
        s22 + gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*(1 - s22).*(-1 + s22).*s22 + 	...
       gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*(1 - s22).*s22.^2)) + 	...
    (-1 + s11).*s11.*pi1.*(gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*(1 - s22).*(-1 + s22).*s22 + 	...
      gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*(1 - s22).*s22.^2 + pi1.*(-1 + s12 + s22).*	...
       (-(gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*s12.*s22) - gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*(1 - s22).*s22) + 	...
      pi1.*(s12 - s22).*(-(gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*s12.*s22) + gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*(1 - s22).*	...
         s22)) + s21.^2.*(gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - pi1 + 2.*s11.*pi1).*(1 - availlambda).*(1 - s22).*s22 + 	...
      pi1.*(-(gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*s12.*(-1 + pi1 + s12 - pi1.*s12).*s22) + 	...
        s12.*(-(gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*s12.*s22) + gamma.*(Dur1./2 + Dur2.*gamma).*pi1.*(1 - availlambda).*s12.*s22)))))./	...
  (s21.^2.*(pi1.*(-(s11.^2.*pi1) + s12.*(-1 + pi1 + s12 - pi1.*s12)) + (-1 + pi1).*(1 - pi1 + 2.*s11.*pi1).*s22) - 	...
    s21.*(-1 + pi1).*(-(pi1.*(-1 + s12).*s12) + (-1 + pi1).*(-1 + s22).*s22) + 	...
    (-1 + s11).*s11.*pi1.*((-1 + s22).*s22 + pi1.*(s12 - s22).*(-1 + s12 + s22))).^2);	
	
hessian(4,1)=hessian(1,4);	
	
hessian(2,4) = sum(-(((-(P1.*pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*(1 - s12).*(-1 + s12).*s12) - 	...
     P1.*pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*(1 - s12).*s12.^2 + 	...
     P2.*(-1 + pi1).*((-1 + s11).*s11.*pi1 + s21.*(-1 + s21 + pi1 + (-1 + 2.*s11).*s21.*pi1)).*(1 - s22).*s22 - 	...
     2.*P2.*(-1 + pi1).*(s21.*(-1 + pi1) + (-1 + s11).*s11.*pi1).*(1 - s22).*s22.^2).*	...
    (gamma.*(Dur1./2 + Dur2.*gamma).*pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*(1 - availlambda).*(-1 + s12).*s12.*s22 + 	...
     gamma.*(Dur1./2 + Dur2.*gamma).*pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*(1 - availlambda).*s12.^2.*s22 + 	...
     gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*((-1 + s11).*s11.*pi1 + s21.*(-1 + s21 + pi1 + (-1 + 2.*s11).*s21.*pi1)).*(1 - availlambda).*(1 - s22).*s22 - 	...
     2.*gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(s21.*(-1 + pi1) + (-1 + s11).*s11.*pi1).*(1 - availlambda).*(1 - s22).*s22.^2))./	...
   (-(s11.^2.*s21.^2.*pi1.^2) - pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*(-1 + s12).*s12 + 	...
     (-1 + pi1).*((-1 + s11).*s11.*pi1 + s21.*(-1 + s21 + pi1 + (-1 + 2.*s11).*s21.*pi1)).*s22 - (-1 + pi1).*(s21.*(-1 + pi1) + (-1 + s11).*s11.*pi1).*	...
      s22.^2).^2) + (P1.*gamma.*(Dur1./2 + Dur2.*gamma).*pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*(1 - availlambda).*(1 - s12).*(-1 + s12).*	...
    s12.*s22 + 3.*P1.*gamma.*(Dur1./2 + Dur2.*gamma).*pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*(1 - availlambda).*(1 - s12).*s12.^2.*	...
    s22 - P1.*gamma.*(Dur1./2 + Dur2.*gamma).*pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*(1 - availlambda).*(-1 + s12).*s12.^2.*s22 - 	...
   P1.*gamma.*(Dur1./2 + Dur2.*gamma).*pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*(1 - availlambda).*s12.^3.*s22 + 	...
   P2.*gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*((-1 + s11).*s11.*pi1 + s21.*(-1 + s21 + pi1 + (-1 + 2.*s11).*s21.*pi1)).*(1 - availlambda).*(1 - s22).^2.*s22 - 	...
   P2.*gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*((-1 + s11).*s11.*pi1 + s21.*(-1 + s21 + pi1 + (-1 + 2.*s11).*s21.*pi1)).*(1 - availlambda).*(1 - s22).*s22.^2 - 	...
   4.*P2.*gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(s21.*(-1 + pi1) + (-1 + s11).*s11.*pi1).*(1 - availlambda).*(1 - s22).^2.*s22.^2 + 	...
   2.*P2.*gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(s21.*(-1 + pi1) + (-1 + s11).*s11.*pi1).*(1 - availlambda).*(1 - s22).*s22.^3)./	...
  (-(s11.^2.*s21.^2.*pi1.^2) - pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*(-1 + s12).*s12 + 	...
   (-1 + pi1).*((-1 + s11).*s11.*pi1 + s21.*(-1 + s21 + pi1 + (-1 + 2.*s11).*s21.*pi1)).*s22 - (-1 + pi1).*(s21.*(-1 + pi1) + (-1 + s11).*s11.*pi1).*	...
    s22.^2) - (gamma.*(Dur1 + 2.*Dur2.*gamma).*(-1 + pi1).*pi1.*(-1 + availlambda).*s21.*(s12.*(-1 + s21) - s11.*(-1 + s22)).*s22.*	...
   ((-((-P1 + P2.*gamma.*pi1.*availlambda).*s12) - P2.*gamma.*(-1 + pi1).*availlambda.*(-1 + s22)).*s22.*(-(pi1.*s11.*s21) + 	...
      (-1 + pi1).*s12.*s22) + s12.*(P1.*(-1 + pi1).*(-1 + s12) + (P1.*pi1 - P2.*gamma.*availlambda).*s22).*	...
     (-(pi1.*(-1 + s21).*s21) + (-1 + pi1).*(-1 + s22).*s22)))./	...
  (((-1 + s12).*s12.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
     (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*(-(pi1.*(-1 + s21).*s21) + 	...
       (-1 + pi1).*(-1 + s22).*s22)).^2.*(-(X1*betas) + delta1).^2) - 	...
 (2.*((-((-P1 + P2.*gamma.*pi1.*availlambda).*s12) - P2.*gamma.*(-1 + pi1).*availlambda.*(-1 + s22)).*s22.*(-(pi1.*s11.*s21) + 	...
      (-1 + pi1).*s12.*s22) + s12.*(P1.*(-1 + pi1).*(-1 + s12) + (P1.*pi1 - P2.*gamma.*availlambda).*s22).*	...
     (-(pi1.*(-1 + s21).*s21) + (-1 + pi1).*(-1 + s22).*s22)).*	...
   (-(gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*(-1 + s12).*s12.*s22.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22)) - 	...
    gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*s12.^2.*s22.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
    (-(gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*(-1 + s12).*s12.*s22) - gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*s12.^2.*	...
       s22).*(-(pi1.*(-1 + s21).*s21) + (-1 + pi1).*(-1 + s22).*s22) + 	...
    (-1 + s12).*s12.*(gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*s12.*(1 - s22).*s22 - 	...
      gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*s12.*s22.^2) + 	...
    (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*	...
     (gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*(1 - s22).*(-1 + s22).*s22 + gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*	...
       (1 - s22).*s22.^2)))./(((-1 + s12).*s12.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
     (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*(-(pi1.*(-1 + s21).*s21) + 	...
       (-1 + pi1).*(-1 + s22).*s22)).^2.*(-(X1*betas) + delta1)) + 	...
 (2.*(gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*(-((-P1 + P2.*gamma.*pi1.*availlambda).*s12) - P2.*gamma.*(-1 + pi1).*availlambda.*(-1 + s22)).*(1 - s22).*s22.*	...
     (-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + s22.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22).*	...
     (gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*(-P1 + P2.*gamma.*pi1.*availlambda).*s12.*s22 - P2.*gamma.^2.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*availlambda.*(1 - s22).*	...
       s22) - gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*s12.*s22.*(P1.*(-1 + pi1).*(-1 + s12) + (P1.*pi1 - P2.*gamma.*availlambda).*s22).*	...
     (-(pi1.*(-1 + s21).*s21) + (-1 + pi1).*(-1 + s22).*s22) + 	...
    s12.*(-(P1.*gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*s12.*s22) + gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*(P1.*pi1 - P2.*gamma.*availlambda).*	...
       (1 - s22).*s22).*(-(pi1.*(-1 + s21).*s21) + (-1 + pi1).*(-1 + s22).*s22) + 	...
    (-((-P1 + P2.*gamma.*pi1.*availlambda).*s12) - P2.*gamma.*(-1 + pi1).*availlambda.*(-1 + s22)).*s22.*	...
     (gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*s12.*(1 - s22).*s22 - gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*s12.*	...
       s22.^2) + s12.*(P1.*(-1 + pi1).*(-1 + s12) + (P1.*pi1 - P2.*gamma.*availlambda).*s22).*	...
     (gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*(1 - s22).*(-1 + s22).*s22 + gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*	...
       (1 - s22).*s22.^2)))./(((-1 + s12).*s12.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
    (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*(-(pi1.*(-1 + s21).*s21) + 	...
      (-1 + pi1).*(-1 + s22).*s22)).*(-(X1*betas) + delta1)) + 	...
 (gamma.*(Dur1 + 2.*Dur2.*gamma).*(-1 + pi1).*(-1 + availlambda).*s22.*((-1 + s12).*s12.*(s12 + (-1 + pi1).*(-1 + s22)) + 	...
    pi1.*s11.*(-1 + s22) + s11.^2.*(pi1 - pi1.*s22)).*((-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*	...
     ((-P1 + P2.*gamma.*pi1.*availlambda).*s12 + P2.*gamma.*(-1 + pi1).*availlambda.*(-1 + s22)).*s22 + 	...
    (-1 + s12).*s12.^2.*(P1.*(-1 + pi1).*(-1 + s12) + (P1.*pi1 - P2.*gamma.*availlambda).*s22)))./	...
  (((-1 + s12).*s12.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
     (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*(-(pi1.*(-1 + s21).*s21) + 	...
       (-1 + pi1).*(-1 + s22).*s22)).^2.*(-(X2*betas) + delta2).^2) - 	...
 (2.*(gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*(-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*	...
     ((-P1 + P2.*gamma.*pi1.*availlambda).*s12 + P2.*gamma.*(-1 + pi1).*availlambda.*(-1 + s22)).*(1 - s22).*s22 - 	...
    2.*gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*(-1 + s12).*s12.^2.*s22.*(P1.*(-1 + pi1).*(-1 + s12) + (P1.*pi1 - P2.*gamma.*availlambda).*s22) - 	...
    gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*s12.^3.*s22.*(P1.*(-1 + pi1).*(-1 + s12) + (P1.*pi1 - P2.*gamma.*availlambda).*s22) + 	...
    ((-P1 + P2.*gamma.*pi1.*availlambda).*s12 + P2.*gamma.*(-1 + pi1).*availlambda.*(-1 + s22)).*s22.*	...
     (-(gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*(-1 + s12).*s12.*s22) - gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*s12.^2.*	...
       s22) + (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*s22.*	...
     (-(gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*(-P1 + P2.*gamma.*pi1.*availlambda).*s12.*s22) + P2.*gamma.^2.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*availlambda.*	...
       (1 - s22).*s22) + (-1 + s12).*s12.^2.*(-(P1.*gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*s12.*s22) + 	...
      gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*(P1.*pi1 - P2.*gamma.*availlambda).*(1 - s22).*s22)))./	...
  (((-1 + s12).*s12.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
    (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*(-(pi1.*(-1 + s21).*s21) + 	...
      (-1 + pi1).*(-1 + s22).*s22)).*(-(X2*betas) + delta2)) + 	...
 (2.*((-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*((-P1 + P2.*gamma.*pi1.*availlambda).*s12 + 	...
      P2.*gamma.*(-1 + pi1).*availlambda.*(-1 + s22)).*s22 + (-1 + s12).*s12.^2.*(P1.*(-1 + pi1).*(-1 + s12) + 	...
      (P1.*pi1 - P2.*gamma.*availlambda).*s22)).*(-(gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*(-1 + s12).*s12.*s22.*	...
      (-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22)) - gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*s12.^2.*s22.*	...
     (-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
    (-(gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*(-1 + s12).*s12.*s22) - gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*s12.^2.*	...
       s22).*(-(pi1.*(-1 + s21).*s21) + (-1 + pi1).*(-1 + s22).*s22) + 	...
    (-1 + s12).*s12.*(gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*s12.*(1 - s22).*s22 - 	...
      gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*s12.*s22.^2) + 	...
    (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*	...
     (gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*(1 - s22).*(-1 + s22).*s22 + gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*	...
       (1 - s22).*s22.^2)))./(((-1 + s12).*s12.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
     (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*(-(pi1.*(-1 + s21).*s21) + 	...
       (-1 + pi1).*(-1 + s22).*s22)).^2.*(-(X2*betas) + delta2)));	
	
	
hessian(4,2)=hessian(2,4);	
	
hessian(3,4) = sum(-((((-P1 + P2).*pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*availlambda.*(1 - s12).*(-1 + s12).*s12 - 	...
     (P1 - P2).*pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*availlambda.*(1 - s12).*s12.^2 + 	...
     (P1 - P2).*(-1 + pi1).*((-1 + s11).*s11.*pi1 + s21.*(-1 + s21 + pi1 + (-1 + 2.*s11).*s21.*pi1)).*availlambda.*s12.*s22 - 	...
     2.*(P1 - P2).*(-1 + pi1).*(s21.*(-1 + pi1) + (-1 + s11).*s11.*pi1).*availlambda.*s12.*s22.^2).*	...
    (gamma.*(Dur1./2 + Dur2.*gamma).*pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*(1 - availlambda).*(-1 + s12).*s12.*s22 + 	...
     gamma.*(Dur1./2 + Dur2.*gamma).*pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*(1 - availlambda).*s12.^2.*s22 + 	...
     gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*((-1 + s11).*s11.*pi1 + s21.*(-1 + s21 + pi1 + (-1 + 2.*s11).*s21.*pi1)).*(1 - availlambda).*(1 - s22).*s22 - 	...
     2.*gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(s21.*(-1 + pi1) + (-1 + s11).*s11.*pi1).*(1 - availlambda).*(1 - s22).*s22.^2))./	...
   (-(s11.^2.*s21.^2.*pi1.^2) - pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*(-1 + s12).*s12 + 	...
     (-1 + pi1).*((-1 + s11).*s11.*pi1 + s21.*(-1 + s21 + pi1 + (-1 + 2.*s11).*s21.*pi1)).*s22 - (-1 + pi1).*(s21.*(-1 + pi1) + (-1 + s11).*s11.*pi1).*	...
      s22.^2).^2) + (-((-P1 + P2).*gamma.*(Dur1./2 + Dur2.*gamma).*pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*(1 - availlambda).*availlambda.*(1 - s12).*	...
     (-1 + s12).*s12.*s22) + 2.*(P1 - P2).*gamma.*(Dur1./2 + Dur2.*gamma).*pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*(1 - availlambda).*availlambda.*	...
    (1 - s12).*s12.^2.*s22 - (-P1 + P2).*gamma.*(Dur1./2 + Dur2.*gamma).*pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*(1 - availlambda).*availlambda.*	...
    (1 - s12).*s12.^2.*s22 + (-P1 + P2).*gamma.*(Dur1./2 + Dur2.*gamma).*pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*(1 - availlambda).*availlambda.*	...
    (-1 + s12).*s12.^2.*s22 - (P1 - P2).*gamma.*(Dur1./2 + Dur2.*gamma).*pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*(1 - availlambda).*availlambda.*	...
    s12.^3.*s22 + (P1 - P2).*gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*((-1 + s11).*s11.*pi1 + s21.*(-1 + s21 + pi1 + (-1 + 2.*s11).*s21.*pi1)).*(1 - availlambda).*	...
    availlambda.*s12.*(1 - s22).*s22 - (P1 - P2).*gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*	...
    ((-1 + s11).*s11.*pi1 + s21.*(-1 + s21 + pi1 + (-1 + 2.*s11).*s21.*pi1)).*(1 - availlambda).*availlambda.*s12.*s22.^2 - 	...
   4.*(P1 - P2).*gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(s21.*(-1 + pi1) + (-1 + s11).*s11.*pi1).*(1 - availlambda).*availlambda.*s12.*(1 - s22).*s22.^2 + 	...
   2.*(P1 - P2).*gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(s21.*(-1 + pi1) + (-1 + s11).*s11.*pi1).*(1 - availlambda).*availlambda.*s12.*s22.^3)./	...
  (-(s11.^2.*s21.^2.*pi1.^2) - pi1.*((-1 + s21).*s21.*(-1 + pi1) - (-1 + s11).*s11.*pi1).*(-1 + s12).*s12 + 	...
   (-1 + pi1).*((-1 + s11).*s11.*pi1 + s21.*(-1 + s21 + pi1 + (-1 + 2.*s11).*s21.*pi1)).*s22 - (-1 + pi1).*(s21.*(-1 + pi1) + (-1 + s11).*s11.*pi1).*	...
    s22.^2) - ((P1 - P2).*gamma.*(Dur1 + 2.*Dur2.*gamma).*(-1 + pi1).^2.*pi1.*(-1 + availlambda).*availlambda.*s12.*s21.*	...
   (s12.*(-1 + s21) - s11.*(-1 + s22)).*s22.*((pi1 - pi1.*s12).*s21.^2 - 	...
    (-1 + pi1).*s22.*(-1 + s12 + s22) + pi1.*s21.*(-1 + s12 + s11.*s22)))./	...
  (((-1 + s12).*s12.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
     (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*(-(pi1.*(-1 + s21).*s21) + 	...
       (-1 + pi1).*(-1 + s22).*s22)).^2.*(-(X1*betas) + delta1).^2) - 	...
 (2.*(P1 - P2).*gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*availlambda.*s12.*s22.*((pi1 - pi1.*s12).*s21.^2 - 	...
    (-1 + pi1).*s22.*(-1 + s12 + s22) + pi1.*s21.*(-1 + s12 + s11.*s22)))./	...
  (((-1 + s12).*s12.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
    (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*(-(pi1.*(-1 + s21).*s21) + 	...
      (-1 + pi1).*(-1 + s22).*s22)).*(-(X1*betas) + delta1)) + 	...
 (2.*(P1 - P2).*(-1 + pi1).*availlambda.*s12.*(gamma.*(Dur1./2 + Dur2.*gamma).*pi1.*(1 - availlambda).*s12.*s21.^2.*s22 - 	...
    gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*(1 - s22).*s22.*(-1 + s12 + s22) - 	...
    (-1 + pi1).*s22.*(-(gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*s12.*s22) + gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*(1 - s22).*s22) + 	...
    pi1.*s21.*(-(gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*s12.*s22) + gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*s11.*(1 - s22).*s22)))./	...
  (((-1 + s12).*s12.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
    (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*(-(pi1.*(-1 + s21).*s21) + 	...
      (-1 + pi1).*(-1 + s22).*s22)).*(-(X1*betas) + delta1)) - 	...
 (2.*(P1 - P2).*(-1 + pi1).*availlambda.*s12.*((pi1 - pi1.*s12).*s21.^2 - (-1 + pi1).*s22.*(-1 + s12 + s22) + 	...
    pi1.*s21.*(-1 + s12 + s11.*s22)).*	...
   (-(gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*(-1 + s12).*s12.*s22.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22)) - 	...
    gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*s12.^2.*s22.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
    (-(gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*(-1 + s12).*s12.*s22) - gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*s12.^2.*	...
       s22).*(-(pi1.*(-1 + s21).*s21) + (-1 + pi1).*(-1 + s22).*s22) + 	...
    (-1 + s12).*s12.*(gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*s12.*(1 - s22).*s22 - 	...
      gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*s12.*s22.^2) + 	...
    (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*	...
     (gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*(1 - s22).*(-1 + s22).*s22 + gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*	...
       (1 - s22).*s22.^2)))./(((-1 + s12).*s12.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
     (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*(-(pi1.*(-1 + s21).*s21) + 	...
       (-1 + pi1).*(-1 + s22).*s22)).^2.*(-(X1*betas) + delta1)) + 	...
 ((P1 - P2).*gamma.*(Dur1 + 2.*Dur2.*gamma).*(-1 + pi1).^2.*(-1 + availlambda).*availlambda.*s12.*s22.*(-(pi1.*(-1 + s11).*s11.*s22) + 	...
    (-1 + s12).*s12.*(-1 + s12 + (-1 + pi1).*s22)).*((-1 + s12).*s12.*(s12 + (-1 + pi1).*(-1 + s22)) + 	...
    pi1.*s11.*(-1 + s22) + s11.^2.*(pi1 - pi1.*s22)))./	...
  (((-1 + s12).*s12.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
     (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*(-(pi1.*(-1 + s21).*s21) + 	...
       (-1 + pi1).*(-1 + s22).*s22)).^2.*(-(X2*betas) + delta2).^2) + 	...
 (2.*(P1 - P2).*gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*availlambda.*s12.*s22.*(-(pi1.*(-1 + s11).*s11.*s22) + 	...
    (-1 + s12).*s12.*(-1 + s12 + (-1 + pi1).*s22)))./	...
  (((-1 + s12).*s12.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
    (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*(-(pi1.*(-1 + s21).*s21) + 	...
      (-1 + pi1).*(-1 + s22).*s22)).*(-(X2*betas) + delta2)) - 	...
 (2.*(P1 - P2).*(-1 + pi1).*availlambda.*s12.*(-(gamma.*(Dur1./2 + Dur2.*gamma).*pi1.*(1 - availlambda).*(-1 + s11).*s11.*(1 - s22).*s22) - 	...
    gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*(-1 + s12).*s12.*s22.*(-1 + s12 + (-1 + pi1).*s22) - 	...
    gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*s12.^2.*s22.*(-1 + s12 + (-1 + pi1).*s22) + 	...
    (-1 + s12).*s12.*(-(gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*s12.*s22) + gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*	...
       (1 - s22).*s22)))./(((-1 + s12).*s12.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
    (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*(-(pi1.*(-1 + s21).*s21) + 	...
      (-1 + pi1).*(-1 + s22).*s22)).*(-(X2*betas) + delta2)) + 	...
 (2.*(P1 - P2).*(-1 + pi1).*availlambda.*s12.*(-(pi1.*(-1 + s11).*s11.*s22) + 	...
    (-1 + s12).*s12.*(-1 + s12 + (-1 + pi1).*s22)).*	...
   (-(gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*(-1 + s12).*s12.*s22.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22)) - 	...
    gamma.*(Dur1./2 + Dur2.*gamma).*(1 - availlambda).*s12.^2.*s22.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
    (-(gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*(-1 + s12).*s12.*s22) - gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*s12.^2.*	...
       s22).*(-(pi1.*(-1 + s21).*s21) + (-1 + pi1).*(-1 + s22).*s22) + 	...
    (-1 + s12).*s12.*(gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*s12.*(1 - s22).*s22 - 	...
      gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*s12.*s22.^2) + 	...
    (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*	...
     (gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*(1 - s22).*(-1 + s22).*s22 + gamma.*(Dur1./2 + Dur2.*gamma).*(-1 + pi1).*(1 - availlambda).*	...
       (1 - s22).*s22.^2)))./(((-1 + s12).*s12.*(-(pi1.*s11.*s21) + (-1 + pi1).*s12.*s22) + 	...
     (-(pi1.*(-1 + s11).*s11) + (-1 + pi1).*(-1 + s12).*s12).*(-(pi1.*(-1 + s21).*s21) + 	...
       (-1 + pi1).*(-1 + s22).*s22)).^2.*(-(X2*betas) + delta2)));	
	
hessian(4,3)=hessian(3,4);	