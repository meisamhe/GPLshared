package board;

import java.sql.*;

/**
 * <p>Title: </p>
 *
 * <p>Description: </p>
 *
 * <p>Copyright: Copyright (c) 2007</p>
 *
 * <p>Company: </p>
 *
 * @author not attributable
 * @version 1.0
 */
public class msAccessDB {
    java.sql.Connection con;
    java.sql.PreparedStatement pstmt;
    java.sql.ResultSet rst;

    public msAccessDB() {
        try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            // System.out.println("successful");
        } catch (ClassNotFoundException e) {
            System.err.println("JdbcOdbc Bridge Driver not found!");
        }

    }

    void open() {
        try {
            con = DriverManager.getConnection("jdbc:odbc:DRIVER={Microsoft Access Driver (*.mdb)};DBQ=C:/Documents and Settings/Meisam/Desktop/elearningDB/elearning.mdb;"); //Be careful while using this line. You should copy it exactly
            System.out.println("Connection Successful ");
        } catch (Exception e) {
            e.printStackTrace();
        }
        // Initialize the JdbcOdbc Bridge Driver

    }

    void close() {
        try {
            con.close();
        } catch (SQLException ex1) {
        }
    }


    void query(String s) {
        try {
            pstmt = con.prepareStatement(s);
            rst = pstmt.executeQuery();
            for (int i = 0; i < 5; i++) {
                if (rst.next()) {
                    System.out.println(rst.getString(3)); //assuming string data is available
                }
            }
        } catch (SQLException ex) {
        }
    }

    boolean exists(String Word, String Meaning) {
        String s = "SELECT * FROM WordLearning WHERE [Word]='" + Word +
                   "' AND [Meaning]='" + Meaning + "'";
        try {
            pstmt = con.prepareStatement(s);
            rst = pstmt.executeQuery();
            if (rst.next()) {
                System.out.println("FOUND!"); //assuming string data is available
                return true;
            }
            System.out.println("NOT FOUND!"); //assuming string data is available
                return false;
        } catch (SQLException ex) {
            System.out.println(ex);
        }
        return true;
    }
    void insert(String Word,String Meaning){
         open();
         if (!exists(Word,Meaning)){
            String s = "INSERT INTO WordLearning ( [Counter], Word, Meaning, Learned, LeitnerLevel, LastTime )  VALUES (0"+
                       ", '"+Word+"', '"+Meaning+"',0,0,0)"; 
            Statement stmt =con.createStatement();
            stmt.executeUpdate(s);
         }
         close();
    }
    public static void main(String[] args) {
        msAccessDB msaccessdb = new msAccessDB();
        String s = "INSERT INTO WordLearning ( [Counter], Word, Meaning, Learned, LeitnerLevel, LastTime )  VALUES (1, 'MARYAM', 'HEJAZYNIA',0,3,15)";
        String s1 = "INSERT INTO WordLearning ( [Counter], Word, Meaning, Learned, LeitnerLevel, LastTime )  VALUES (1, 'JAFAR', 'HEJAZYNIA',0,3,15)";
        Statement stmt;
       try {
            System.out.println("enter");
            msaccessdb.open();
            stmt = msaccessdb.con.createStatement();
            stmt.executeUpdate(s);
            msaccessdb.close();
            msaccessdb.open();
            stmt = msaccessdb.con.createStatement();
            stmt.executeUpdate(s1);
            System.out.println("done!");
            msaccessdb.close();
        } catch (SQLException ex) {
            System.out.println(ex);
        }
  //  msaccessdb.open();
  //  msaccessdb.exists("Meisam","Hejazynia");
    }
}
