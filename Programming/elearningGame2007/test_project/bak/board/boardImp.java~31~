package board;

/**
 * <p>Title: </p>
 *
 * <p>Description: </p>
 *
 * <p>Copyright: Copyright (c) 2007</p>
 *
 * <p>Company: </p>
 *
 * @author not attributable
 * @version 1.0
 */
import java.awt.*;
import javax.swing.*;
import java.applet.*;
import java.awt.BorderLayout;
import java.awt.event.MouseMotionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseAdapter;

public class boardImp extends JApplet {
    boolean check;
    board mainBoard;
    public boardImp() {
        try {
            mainBoard = new board();
            jbInit();

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    public void init() {
        setVisible(true);
        AudioClip sound;
        sound = getAudioClip(getDocumentBase(), "gamemusic.wav");
        //   System.out.print(getDocumentBase());
        sound.play();
        if (this.getWidth() != 1280) {
            this.setSize(1280, 1000);
        }
        super.setSize(1280, 1000);
        //    System.out.print(this.getWidth());
        check = true;
    }

    public void paint(Graphics g) {
        if (check == true) {
            this.setSize(1280, 1000);
            //         System.out.print(this.WIDTH);
            check = false;
        }
        //     System.out.print(this.getWidth());
        super.paint(g); // call superclass's paint method
        Color c3 = new Color(164, 87, 158);
        g.setColor(c3);
        g.fillRect(0, 0, 1280, 1000);
        Color c = new Color(143, 253, 128);
        g.setColor(c);
        g.fillRect(100, 100, 800, 800);
        //drawing image
        try {
            ImageIcon im = new ImageIcon(
                    "gifc/fruit1.gif");
            if (im.getImageLoadStatus() == MediaTracker.ERRORED) {
                //         System.out.print(im.getImageLoadStatus());
            }
            im.paintIcon(this, g, 200, 200);
            im = new ImageIcon("gifc/leaf5.gif");
            if (im.getImageLoadStatus() == MediaTracker.ERRORED) {
                //        System.out.print(im.getImageLoadStatus());
            }
            im.paintIcon(this, g, 100, 100);

        } catch (Exception e) {
            System.out.print("\n");
            System.out.print(e);
        }

        //line drawing
        g.setColor(Color.BLACK);
        g.drawLine(500, 100, 500, 900);
        // next drawing
        //line drawing
        g.setColor(Color.BLACK);
        g.drawLine(100, 500, 900, 500);
        // next drawing
        //line drawing
        g.setColor(Color.BLACK);
        g.drawLine(100, 300, 900, 300);
        // next drawing
        //line drawing
        g.setColor(Color.BLACK);
        g.drawLine(100, 700, 900, 700);
        // next drawing
        //line drawing
        g.setColor(Color.BLACK);
        g.drawLine(300, 100, 300, 900);
        // next drawing
        //line drawing
        g.setColor(Color.BLACK);
        g.drawLine(700, 100, 700, 900);
        // next drawing
        //line drawing
        g.setColor(Color.BLACK);
        g.drawLine(800, 100, 800, 900);
        // next drawing
        //line drawing
        g.setColor(Color.BLACK);
        g.drawLine(600, 100, 600, 900);
        // next drawing
        g.setColor(Color.BLACK);
        g.drawLine(400, 100, 400, 900);
        // next drawing
        // next drawing
        g.setColor(Color.BLACK);
        g.drawLine(200, 100, 200, 900);
        // next drawing
        //line drawing
        g.setColor(Color.BLACK);
        g.drawLine(100, 400, 900, 400);
        // next drawing
        //line drawing
        g.setColor(Color.BLACK);
        g.drawLine(100, 600, 900, 600);
        // next drawing
        //line drawing
        g.setColor(Color.BLACK);
        g.drawLine(100, 800, 900, 800);
        // next drawing
        //line drawing
        g.setColor(Color.BLACK);
        g.drawLine(100, 200, 900, 200);
        // next drawing

        g.setColor(Color.BLACK);
        g.drawRect(100, 100, 800, 800);
        Color c1 = new Color(249, 245, 189);
        g.setColor(c1);
        g.fillRoundRect(950, 100, 250, 500, 50, 50);
        Color c2 = new Color(254, 167, 208);
        g.setColor(Color.BLACK);
        g.drawRoundRect(950, 100, 250, 500, 50, 50);
        g.setColor(c2);
        g.fillRoundRect(950, 620, 250, 280, 50, 50);
        g.setColor(Color.BLACK);
        g.drawRoundRect(950, 620, 250, 280, 50, 50);
        //    g.draw3DRect(100,100,700,800, false );

//      g.setColor( Color.BLUE );
//      g.drawRect( 5, 40, 90, 55 );
//      g.fillRect( 100, 40, 90, 55 );
//
//      g.setColor( Color.CYAN );
//      g.fillRoundRect( 195, 40, 90, 55, 50, 50 );
//      g.drawRoundRect( 290, 40, 90, 55, 20, 20 );
//
//      g.setColor(Color.BLACK);
//      g.setFont( new Font( "Serif", Font.BOLD, 12 ) );
//      g.drawString( "UNTIDISTABLISHMENTRIALISM", 100, 120 );
//      g.drawString( "UNTIDISTABLISHMENTRIALISM", 90, 65 );
//      g.setColor( Color.YELLOW );
//      g.draw3DRect( 5, 100, 90, 55, true );
//      g.fill3DRect( 100, 100, 90, 55, false );
        //     g.fillOval(100,100,100,100);
        g.setFont(new Font("Sylfaen", Font.ITALIC, 20));
        g.setColor(Color.yellow);
        g.setColor(Color.BLACK);
        g.drawString("untidis", 125, 125);
        g.drawString("stablishment", 100, 150);
        g.drawString("rialism", 125, 175);
        g.setFont(new Font("B Mitra", Font.CENTER_BASELINE, 15));
        String s = "„»«—“Â ⁄·\u06CCÂ ÕòÊ„  ò·\u06CC”«Â«";
        g.drawString(s, 225, 250);

        for (int i = 0; i < 64; i++) {
            System.out.println(mainBoard.boardCell[i / 8][i % 8].getContent1());
            if (mainBoard.boardCell[i / 8][i % 8].getRowCount() == 1 &&
                mainBoard.boardCell[i / 8][i % 8].en == true) {
                g.setFont(new Font("Sylfaen", Font.ITALIC,
                                   mainBoard.boardCell[i / 8][i % 8].getFont()));
                g.setColor(Color.BLACK);
                g.drawString(mainBoard.boardCell[i / 8][i % 8].getContent1(),
                             mainBoard.boardCell[i / 8][i % 8].start1,
                             mainBoard.boardCell[i / 8][i % 8].y);

            }
            if (mainBoard.boardCell[i / 8][i % 8].getRowCount() == 3 &&
                mainBoard.boardCell[i / 8][i % 8].en == true) {
                g.setFont(new Font("Sylfaen", Font.ITALIC,
                                   mainBoard.boardCell[i / 8][i % 8].getFont()));
                g.setColor(Color.BLACK);
                g.drawString(mainBoard.boardCell[i / 8][i % 8].getContent1(),
                             mainBoard.boardCell[i / 8][i % 8].start1,
                             mainBoard.boardCell[i / 8][i % 8].y - 25);

                g.drawString(mainBoard.boardCell[i / 8][i % 8].getContent2(),
                             mainBoard.boardCell[i / 8][i % 8].start2,
                             mainBoard.boardCell[i / 8][i % 8].y);

                g.drawString(mainBoard.boardCell[i / 8][i % 8].getContent3(),
                             mainBoard.boardCell[i / 8][i % 8].start3,
                             mainBoard.boardCell[i / 8][i % 8].y + 25);
            }
            if (mainBoard.boardCell[i / 8][i % 8].getRowCount() == 1 &&
                mainBoard.boardCell[i / 8][i % 8].en == false) {
                g.setFont(new Font("B Mitra", Font.CENTER_BASELINE,
                                   mainBoard.boardCell[i / 8][i % 8].getFont()));
                g.setColor(Color.BLACK);
                g.drawString(mainBoard.boardCell[i / 8][i % 8].getContent1(),
                             mainBoard.boardCell[i / 8][i % 8].start1,
                             mainBoard.boardCell[i / 8][i % 8].y);

            }
            if (mainBoard.boardCell[i / 8][i % 8].getRowCount() == 3 &&
                mainBoard.boardCell[i / 8][i % 8].en == false) {
                g.setFont(new Font("B Mitra", Font.CENTER_BASELINE,
                                   mainBoard.boardCell[i / 8][i % 8].getFont()));
                g.setColor(Color.BLACK);
                g.drawString(mainBoard.boardCell[i / 8][i % 8].getContent1(),
                             mainBoard.boardCell[i / 8][i % 8].start1,
                             mainBoard.boardCell[i / 8][i % 8].y - 25);

                g.drawString(mainBoard.boardCell[i / 8][i % 8].getContent2(),
                             mainBoard.boardCell[i / 8][i % 8].start2,
                             mainBoard.boardCell[i / 8][i % 8].y);

                g.drawString(mainBoard.boardCell[i / 8][i % 8].getContent3(),
                             mainBoard.boardCell[i / 8][i % 8].start3,
                             mainBoard.boardCell[i / 8][i % 8].y + 25);
            }

        }

//
        //     g.drawImage(im)
//
//      g.setColor( Color.MAGENTA );
//      g.drawOval( 195, 100, 90, 55 );
//      g.fillOval( 290, 100, 90, 55 );

    } // end method paint

    String convertUnicode(String s) {
        byte[] utf8 = s.getBytes();

       // Convert from UTF-8 to Unicode
       String result = new String(utf8, "UTF-8");
       return result;

    }

    private void jbInit() throws Exception {
        jPanel1.setToolTipText("");
        this.getContentPane().add(jPanel1, java.awt.BorderLayout.NORTH);
        // set up mouse motion event handling
        addMouseListener(
                // anonymous inner class to handle mouse events
                new MouseAdapter() {
            public void mouseClicked(MouseEvent event) {
                System.out.println("x is:" + event.getX() + "y is:" +
                                   event.getY());
            } // end method mouseClicked
        }
        );

        jPanel1.setSize(1000, 100);
    }

    JPanel jPanel1 = new JPanel();
}
