Class MultilayerPerceptron
* java.lang.Object
* 
* weka.classifiers.AbstractClassifier
* 
* weka.classifiers.functions.MultilayerPerceptron
* All Implemented Interfaces:
java.io.Serializable, java.lang.Cloneable, Classifier, CapabilitiesHandler, OptionHandler, Randomizable, RevisionHandler, WeightedInstancesHandler


public class MultilayerPerceptron
extends AbstractClassifier
implements OptionHandler, WeightedInstancesHandler, Randomizable
A Classifier that uses backpropagation to classify instances.
This network can be built by hand, created by an algorithm or both. The network can also be monitored and modified during training time. The nodes in this network are all sigmoid (except for when the class is numeric in which case the the output nodes become unthresholded linear units).
Valid options are:
 -L <learning rate>
  Learning Rate for the backpropagation algorithm.
  (Value should be between 0 - 1, Default = 0.3).
 
 -M <momentum>
  Momentum Rate for the backpropagation algorithm.
  (Value should be between 0 - 1, Default = 0.2).
 
 -N <number of epochs>
  Number of epochs to train through.
  (Default = 500).
 
 -V <percentage size of validation set>
  Percentage size of validation set to use to terminate
  training (if this is non zero it can pre-empt num of epochs.
  (Value should be between 0 - 100, Default = 0).
 
 -S <seed>
  The value used to seed the random number generator
  (Value should be >= 0 and and a long, Default = 0).
 
 -E <threshold for number of consequetive errors>
  The consequetive number of errors allowed for validation
  testing before the netwrok terminates.
  (Value should be > 0, Default = 20).
 
 -G
  GUI will be opened.
  (Use this to bring up a GUI).
 
 -A
  Autocreation of the network connections will NOT be done.
  (This will be ignored if -G is NOT set)
 
 -B
  A NominalToBinary filter will NOT automatically be used.
  (Set this to not use a NominalToBinary filter).
 
 -H <comma seperated numbers for nodes on each layer>
  The hidden layers to be created for the network.
  (Value should be a list of comma separated Natural 
  numbers or the letters 'a' = (attribs + classes) / 2, 
  'i' = attribs, 'o' = classes, 't' = attribs .+ classes)
  for wildcard values, Default = a).
 
 -C
  Normalizing a numeric class will NOT be done.
  (Set this to not normalize the class if it's numeric).
 
 -I
  Normalizing the attributes will NOT be done.
  (Set this to not normalize the attributes).
 
 -R
  Reseting the network will NOT be allowed.
  (Set this to not allow the network to reset).
 
 -D
  Learning rate decay will occur.
  (Set this to cause the learning rate to decay).
 
