/* Generated by RMICompiler.jc (mdw@cs.berkeley.edu) -- do not edit */

package ninja.MatrixMultiplicationRMI;
import ninja.rmi.NinjaRemoteCall;
import ninja.rmi.NinjaObjectInputStream;
import ninja.rmi.NinjaObjectOutputStream;
import ninja.Domain.RemoteObject;

public class MatrixMultiplicationImpl__RMISkel extends ninja.rmi.NinjaSkeleton {
  private static final long _hash = 2319177842658361088L;

  // Generated methods begin here

  public void dispatch(RemoteObject obj, ninja.rmi.NinjaRemoteCall remcall, int opnum, long hash) throws Exception {
    if (hash != _hash) throw new Exception("Skeleton hashvalue mismatch");
    ninja.MatrixMultiplicationRMI.MatrixMultiplicationImpl _realobj = (ninja.MatrixMultiplicationRMI.MatrixMultiplicationImpl)obj;
    switch (opnum) {

    case 0: {  // Multiply
      ninja.MatrixMultiplicationRMI.SerializableMatrix param0;
      ninja.MatrixMultiplicationRMI.SerializableMatrix param1;
        NinjaObjectInputStream _in = remcall.getInputStream();
        param0 = (ninja.MatrixMultiplicationRMI.SerializableMatrix)_in.readObject((ninja.Domain.Serializable)Class.forName("ninja.MatrixMultiplicationRMI.SerializableMatrix" ).newInstance());
        param1 = (ninja.MatrixMultiplicationRMI.SerializableMatrix)_in.readObject((ninja.Domain.Serializable)Class.forName("ninja.MatrixMultiplicationRMI.SerializableMatrix" ).newInstance());
      ninja.MatrixMultiplicationRMI.SerializableMatrix _result = _realobj.Multiply(param0, param1);
        NinjaObjectOutputStream _out = remcall.getResultStream(true);
        _out.writeObject(_result);
      break;
    }

    default: {
      throw new Exception("Method number "+opnum+" out of range");
    }

    }
  }

  // End of generated code
}
