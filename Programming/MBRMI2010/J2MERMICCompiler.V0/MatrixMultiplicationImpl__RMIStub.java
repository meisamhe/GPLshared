/* Generated by RMICompiler.jc (mdw@cs.berkeley.edu) -- do not edit */

package ninja.MatrixMultiplicationRMI;
import ninja.rmi.NinjaObjectOutputStream;
import ninja.rmi.NinjaObjectInputStream;
import ninja.Domain.DataOutputStream;
import ninja.Domain.Serializable;
import ninja.Domain.DataInputStream;
import peer2me.domain.Hashtable;
import ninja.Domain.ServerRequestEntity;import peer2me.framework.FrameworkFrontEnd;
public class MatrixMultiplicationImpl__RMIStub extends ninja.rmi.NinjaRemoteStub implements ninja.MatrixMultiplicationRMI.MatrixMultiplication {
  private static long _hash = 2319177842658361088L;

boolean wake;

public MatrixMultiplicationImpl__RMIStub(){}
  public MatrixMultiplicationImpl__RMIStub(ninja.rmi.NinjaRemoteRef ref) {
    super(ref);
  }
  public void remoteReferenceSet (ninja.rmi.NinjaRemoteRef ref){
       setRemoteReference(ref) ;
    }
   public void writeObject(DataOutputStream dos) {
       dos.writeLong(_hash);
       super.writeObject(dos);
     }
    public Serializable readObject(DataInputStream dis) {
        _hash = dis.readLong();
        super.readObject(dis);
        return this;  //To change body of implemented methods use File | Settings | File Templates.
    }

  // Generated methods begin here

  public synchronized ninja.MatrixMultiplicationRMI.SerializableMatrix Multiply(ninja.MatrixMultiplicationRMI.SerializableMatrix param0, ninja.MatrixMultiplicationRMI.SerializableMatrix param1) throws java.lang.Exception {
    int _opnum = 0;
    ninja.rmi.NinjaRemoteCall _remcall = _ref.newCall(_opnum, _hash);
    try {
      NinjaObjectOutputStream _objout = _remcall.getOutputStream();
      _objout.writeObject(param0);
      _objout.writeObject(param1);
 _objout.flush();
    } catch (Exception _e) {
 _e.printStackTrace(); 
    }
    try {wake = false;
while (!wake)  {}

      _ref.invoke(_remcall);
} catch (Exception e) {
      e.printStackTrace();
    }

    ninja.MatrixMultiplicationRMI.SerializableMatrix _result=null;
    try {

      NinjaObjectInputStream _in = _remcall.getInputStream();
      _result = (ninja.MatrixMultiplicationRMI.SerializableMatrix)_in.readObject((ninja.Domain.Serializable)Class.forName("ninja.MatrixMultiplicationRMI.SerializableMatrix" ).newInstance());
    } catch (java.lang.ClassNotFoundException _e) {
 _e.printStackTrace(); 
    } catch (java.lang.Exception _e) {
      _e.printStackTrace();
    } finally {
      _ref.done(_remcall);
    }
    return _result;
  }

  // End of generated code
public void notifyAboutException(String location, Exception exception) {}

    public void notifyAboutFoundNode(String nodeAddress, String remoteNodeName) {}

    public void notifyAboutReceivedTextPackage(String senderName, String textMessage) {
        DataInputStream.flush(new ServerRequestEntity(textMessage,((FrameworkFrontEnd)f).participatingNodeAddress),null);
 wake = true;
    }

    public void notifyAboutReceivedFilePackage(String senderName, String filePath) {}

    public void notifyAboutParticipants(Hashtable participants) {
    }
}
