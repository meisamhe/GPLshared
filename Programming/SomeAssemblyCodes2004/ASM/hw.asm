; Hello World Sample!
; Jump to start:
STACKSG	SEGMENT	PARA	STACK	'STACK'
	DW	32	DUP(0)
STACKSG	ENDS
DATASG	SEGMENT PARA 'DATA'
	INLIST	LABEL	BYTE	;PLACE HOLDER
	MAXCHAR	DB	6	;ZIP CODE PLUS CR
	ACTUAL	DB	?	;GET BACK # TYPED
	ZIPCODE DB	6 DUP(?)
	msg DB  'HELLO WORLD!$'
	; Load address of msg to DX register:
DATASG 	ENDS
CODESG	SEGMENT  PARA	'CODE'
BEGIN	PROC	FAR	
	ASSUME	SS:STACKSG,DS:DATASG,CS:CODESG
	MOV	AX,DATASG;SET ADDRESS OF DATASG
	MOV	DS,AX	;IN DS REGISTER
	
	MOV AH,0AH	;KEYBOARD INPUT
	LEA DX,INLIST	;GIVE PLIST
	INT 21H
	MOV AH,02H	;CODE TO SET CURSO
	MOV BH,00	;PAGE NUMBER 00
	MOV DX,1122	;ROW 12,COLUMN33
	INT 10H
	MOV ZIPCODE+5,'$';REPLACE CR WITH$
	MOV AH,09H	;SET UP DOS CALL	
	LEA DX,ZIPCODE	;PRINT ZIP CODE
	INT 21H
	MOV AH,02H	;CODE TO SET CURSO
	MOV BH,00	;PAGE NUMBER 00
	MOV DX,1233	;ROW 12,COLUMN33
	INT 10H
	LEA DX, msg
	; Print using DOS interrupt:
       	MOV AH, 9
       	INT 21h
	; Exit to operating system:
       	MOV AH, 4Ch
       	INT 21h
BEGIN	ENDP
CODESG	ENDS
	END	BEGIN
	
